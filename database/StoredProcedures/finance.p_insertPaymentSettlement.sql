/*
name=[finance].[p_insertPaymentSettlement]
version=1.0.1
lastUpdate=2017-01-24 10:37:21
O36aJ9BTbiId0E/eH09OKw==
*/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[finance].[p_insertPaymentSettlement]') AND type in (N'P', N'PC'))
DROP PROCEDURE [finance].[p_insertPaymentSettlement]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[finance].[p_insertPaymentSettlement]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'
CREATE PROCEDURE [finance].[p_insertPaymentSettlement]
@xmlVar XML
AS
BEGIN 
	DECLARE @errorMsg VARCHAR(2000),
			@rowcount INT,
			@ERROR INT
        
	DECLARE @tmp_set TABLE (i int identity(1,1),id uniqueidentifier,[date] datetime, incomePaymentId uniqueidentifier, outcomePaymentId uniqueidentifier, amount numeric(18,2), [version] uniqueidentifier, isAutoGenerated bit) 
 
	BEGIN TRY  
   		INSERT  INTO @tmp_set ( id,[date],incomePaymentId,outcomePaymentId,amount,version,isAutoGenerated )
		SELECT  con.value(''(id)[1]'', ''char(36)''),
				con.value(''(date)[1]'', ''datetime''),
				con.value(''(incomePaymentId)[1]'', ''char(36)''),
				con.value(''(outcomePaymentId)[1]'', ''char(36)''),
				con.value(''(amount)[1]'', ''numeric(18,2)''),
				con.value(''(version)[1]'', ''char(36)''),
				con.value(''(isAutoGenerated)[1]'', ''bit'')
		FROM    @xmlVar.nodes(''/root/paymentSettlement/entry'') AS C ( con )

		/*Wstawienie danych o rozliczeniach płatności*/
		INSERT  INTO [finance].[PaymentSettlement] ( id, date, incomePaymentId, outcomePaymentId, amount, version, isAutoGenerated )
		   SELECT id,date,incomePaymentId,outcomePaymentId,amount,version,isAutoGenerated
		   FROM @tmp_set
		   WHERE id NOT IN (SELECT id FROM finance.PaymentSettlement)

		/*Pobranie liczby wierszy*/
		SELECT  @rowcount = @@ROWCOUNT 

    END TRY
	BEGIN CATCH
			SELECT @errorMsg = ''Błąd wstawiania danych tabela:PaymentSettlement; error:''
				+ CAST(@@ERROR AS VARCHAR(50)) + '';Procedura:'' + ERROR_PROCEDURE() + '';Linia:'' + CAST(ERROR_LINE() as varchar(50))+ '';Opis:'' + ERROR_MESSAGE() 
            RAISERROR ( @errorMsg, 16, 1)
    END CATCH        
	IF @rowcount = 0 
		BEGIN
		-- RAISERROR ( 50011, 16, 1 ) ;
		/* 
			Aby zapobiec występowaniu przestojów w komunikacji zamieniam ten komunikat na próbę wstawienia jak się okazuje nowgo wpisu w konfiguracji.
			Może to spowodować błąd logiki systemu (jeśli ktoś celowo usunoł klucz w tym samym czasie z tego miejsca), jednak z punktu widzenia
			i tak koniecznej naprawy, lepiej jest mieć dane które może są niesłusznie niż wcale ich nie mieć i wykminiać czy słusznie 
		*/
			EXEC [finance].[p_updatePaymentSettlement] @xmlVar
		END
END
' 
END
GO
