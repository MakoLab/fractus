<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="service" type="Makolab.Fractus.Communication.ServiceSectionHandler, HostingService"/>
    <section name="modules" type="Makolab.Fractus.Communication.ModulesSectionHandler, HostingService"/>
    <section name="transmitters" type="Makolab.Fractus.Communication.Transmitter.TransmittersSectionHandler, CommunicationModule"/>
    <section name="executors" type="Makolab.Fractus.Communication.Executor.ExecutorsSectionHandler, CommunicationModule"/>
    <section name="databaseConnectors" type="Makolab.Fractus.Communication.DatabaseConnector.DatabaseConnectorsSectionHandler, CommunicationModule"/>
    <section name="dependencyContainers" type="Makolab.Fractus.Commons.DependencyInjection.ContainerSectionHandler, Commons"/>
    <section name="fractusKernel" type="Makolab.Fractus.Kernel.FractusKernelSectionHandler, Kernel"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <service Name="Branch1" ModuleUnloadTimeout="10000" Description="Fractus supporting servive."/>
  <modules>
    <module name="communication" type="Makolab.Fractus.Communication.CommunicationController, CommunicationModule"/>
  </modules>
  <dependencyContainers>
    <container name="CommunicationContainer" type="Makolab.Fractus.Communication.FractusContainerProvider, FractusDependencyConfiguration"/>
    <container type="Makolab.Fractus.Kernel.DependencyInjection.KernelContainerProvider, Kernel" name="KernelContainer"/>
    <binding assembly="CommunicationModule" container="CommunicationContainer"/>
    <binding assembly="FractusCommunication" container="CommunicationContainer"/>
  </dependencyContainers>
  <transmitters>
    <transmitter Autostart="true" ReceiveInterval="2000" Name="Transmitter" SendInterval="2000" EnableSender="false" EnableReceiver="true" EnableStatistics="false" UpdateStatisticsIntervalInSec="2">
      <internalDependencies>
        <dependency Name="Database" Object="FHDB"/>
      </internalDependencies>
    </transmitter>
  </transmitters>
  <executors>
    <executor Name="Executor" Autostart="true" ExecutionInterval="2000" MaxTransactionCount="10">
      <internalDependencies>
        <dependency Name="Database" Object="FHDB_EXECUTE"/>
        <dependency Name="Transmitter" Object="Transmitter"/>
      </internalDependencies>
    </executor>
  </executors>
  <databaseConnectors>
    <databaseConnector Name="FHDB" ConnectionString="Data Source= ;User ID=sa;Password= ;database=Fraktusek2;Application Name=CommTest"/>
    <databaseConnector Name="FHDB_EXECUTE" ConnectionString="Data Source= ;User ID=sa;Password= ;database=Fraktusek2;Application Name=CommTest" BlockConnection="false"/>
  </databaseConnectors>
  <fractusKernel>
    <session timeout="0"/>
    <transaction forceRollback="false"/>
    <database logCommunication="false" logPath="D:\workdir\other\Fractus2.0\CommunicationTests\Branch1\TestLog.xml"/>
  </fractusKernel>
  <connectionStrings>
    <add name="Main" connectionString="Server= ;database=Fraktusek2;user id=sa;password= ;Application Name=CommTest" providerName="System.Data.SqlClient"/>
  </connectionStrings>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="basicHttp" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" allowCookies="false" bypassProxyOnLocal="false" hostNameComparisonMode="StrongWildcard" maxBufferSize="65536" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <security mode="None">
            <transport clientCredentialType="None" proxyCredentialType="None" realm=""/>
            <message clientCredentialType="UserName" algorithmSuite="Default"/>
          </security>
        </binding>
      </basicHttpBinding>
      <wsHttpBinding>
        <binding name="clientWsHttpBinding" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00" bypassProxyOnLocal="false" transactionFlow="false" hostNameComparisonMode="StrongWildcard" maxBufferPoolSize="524288" maxReceivedMessageSize="65536" messageEncoding="Text" textEncoding="utf-8" useDefaultWebProxy="true" allowCookies="false">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384" maxBytesPerRead="4096" maxNameTableCharCount="16384"/>
          <!-- <reliableSession ordered="true" inactivityTimeout="00:10:00" enabled="false" /> -->
          <security mode="Message">
            <message clientCredentialType="Certificate"/>
          </security>
        </binding>
      </wsHttpBinding>
    </bindings>
    <client>
      <endpoint address="http://127.0.0.1:3322/SynchronizationService" binding="wsHttpBinding" bindingConfiguration="clientWsHttpBinding" behaviorConfiguration="clientBehavior" contract="Makolab.Fractus.Communication.ISynchronizationService" name="communicationService"/>
    </client>
    <behaviors>
      <serviceBehaviors>
        <!--  object fetcher server behavior -->
        <behavior name="DiagnosticBehavior">
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceMetadata/>
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="clientBehavior">
          <clientCredentials>
            <clientCertificate findValue="CommunicationClient" x509FindType="FindBySubjectName" storeLocation="LocalMachine" storeName="My"/>
            <serviceCertificate>
              <authentication certificateValidationMode="PeerTrust"/>
            </serviceCertificate>
          </clientCredentials>
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <services>
      <!-- object fetcher server -->
      <service name="Makolab.Fractus.Communication.DiagnosticService" behaviorConfiguration="DiagnosticBehavior">
        <endpoint address="net.pipe://localhost/Branch1DiagnosticService" binding="netNamedPipeBinding" contract="Makolab.Fractus.Communication.IDiagnosticService"/>
        <endpoint address="net.pipe://localhost/Branch1eDiagnosticService/mex" binding="mexNamedPipeBinding" contract="IMetadataExchange"/>
      </service>
    </services>
  </system.serviceModel>
  <log4net>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="servicelog.txt"/>
      <appendToFile value="true"/>
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <rollingStyle value="Size"/>
      <maxSizeRollBackups value="1"/>
      <maximumFileSize value="10MB"/>
      <staticLogFileName value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%property{RequestId}] %-5level - %message [%property{source} - %property{sourceParams}] %exception%newline"/>
      </layout>
    </appender>
    <root>
      <level value="INFO"/>
      <appender-ref ref="RollingFileAppender"/>
    </root>
  </log4net>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/></startup></configuration>
