<?xml version="1.0" encoding="utf-8"?>
<mx:FormItem implements="com.makolab.components.catalogue.ICatalogueFilter" xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" xmlns:inputComponents="com.makolab.components.inputComponents.*">
	<mx:Script>
		<![CDATA[
			import com.makolab.components.util.Tools;
			import com.makolab.fractus.model.DictionaryManager;
			import com.makolab.fractus.model.LanguageManager;
			
			import mx.binding.utils.BindingUtils;
			private var _config:XML
			
			public function get value():Object
			{
				return comboBox.selectedItem.@value;
			}
			
			public function set config(value:XML):void
			{
				_config = value;
				if(_config.@labelKey.length())
				{
					var ka:Array=(_config.@labelKey).split('.');
					if(ka.length)
						BindingUtils.bindProperty(this,'label',LanguageManager.getInstance().labels,ka);
					else
						BindingUtils.bindProperty(this,'label',LanguageManager.getInstance().labels,_config.@labelKey);
				}
				else
				label = _config.@label;
			}
			
			public function get config():XML
			{
				return _config;
			}
			
			public function setParameters(parameters:Object):void
			{
				
			}
			
			public function set template(valueList:XMLList):void{
				for each (var value:XML in valueList){
				//todo: jesli filtr ma rozpoznawac, ktory elem. z listy jest dla niego, trzeba to tu dodać
				
				/*
				<filter value="1"/>
				*/		
				var objects:Object = comboBox.dataProvider;
				for each(var o:Object in objects){
					if(o.@value == value.@value)
						comboBox.selectedItem = o;
				}
				}
			}
			
			public function clear():void{
				if(comboBox.enabled)comboBox.selectedIndex = 0;
			}
			public function restore():void{
				//todo
				//trzeba dopisac cialo funkcji, jesli inny filtr ma miec mozliwosc przywracania stanu tego filtra sprzed wyczyszczenia go
				//filtry mogą mieć wpływ na inne filtry poprzez wypelnienie w konfiguracji parametru 'disableFilterType', przyklad w DocNumberFilter
			}
		]]>
	</mx:Script>
	<inputComponents:CheckBoxCombo id="comboBox" width="100%" minWidth="50" labelField="@label">
		<inputComponents:dataProvider>
			<mx:XMLList xmlns="">
				<option label="Baluty" value=""/>
				<option label="Retkinia" value="1"/>
				<option label="Gorna" value="0"/>
			</mx:XMLList>
		</inputComponents:dataProvider>
	</inputComponents:CheckBoxCombo>
</mx:FormItem>
