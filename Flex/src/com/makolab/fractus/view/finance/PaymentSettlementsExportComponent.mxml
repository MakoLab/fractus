<?xml version="1.0" encoding="utf-8"?>
<mx:Form xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:generic="com.makolab.fractus.view.generic.*" xmlns:layoutComponents="com.makolab.components.layoutComponents.*"
		paddingTop="4"
		paddingBottom="4"
		paddingLeft="4"
		paddingRight="4"
		creationComplete="checkDocumentExportStatus()"
	xmlns:inputComponents="com.makolab.components.inputComponents.*" xmlns:filters="com.makolab.fractus.view.documents.reports.filters.*" xmlns:documentLists="com.makolab.fractus.view.documents.documentLists.*">
	<mx:Script>
		<![CDATA[
			import com.makolab.components.util.Tools;
			import com.makolab.fractus.commands.ExecuteCustomProcedureCommand;
			import com.makolab.fractus.commands.SearchCommand;
			import com.makolab.fractus.model.DictionaryManager;
			import com.makolab.fractus.model.LanguageManager;
			import com.makolab.fractus.model.ModelLocator;
			import com.makolab.fractus.model.document.DocumentTypeDescriptor;
			import com.makolab.fractus.view.ComponentWindow;
			import com.makolab.fractus.view.generic.DocumentStatusRenderer;
			
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;

			[Bindable]
			private var showProgressBar:Boolean = false;
			
			protected var window:ComponentWindow;
			
			public static function showWindow():ComponentWindow
			{
				var component:PaymentSettlementsExportComponent = new PaymentSettlementsExportComponent();
				var window:ComponentWindow = ComponentWindow.showWindow(component, 0, new Rectangle(-1, -1, 600, 110), LanguageManager.getLabel("accounting.paymentSynchronization"));
				component.window = window;
				return window;
			}
			
			private function btnExportClick(event:Event):void
			{
				this.btnExport.enabled = false;
				this.asyncTask.startTask(new XMLList());
				this.showProgressBar = true;
			}
			
			private function onFault(event:FaultEvent):void
			{
				Alert.show('Wystąpił błąd:\n' + event.fault.faultString);
				this.btnExport.enabled = true;
				this.showProgressBar = false;
			}
			
			private function checkDocumentExportStatus():void
			{
				var cmd:ExecuteCustomProcedureCommand = new ExecuteCustomProcedureCommand("accounting.p_getExportStatus",XML("<root/>"));
				cmd.addEventListener(ResultEvent.RESULT,exportStatusResult);
				cmd.execute();
			}
			
			private function exportStatusResult(event:ResultEvent):void
			{
				var result:XML = XML(event.result);
				if (result)
				{
					if (result.document.length() > 0)
					{
						for each (var doc:XML in result.document)
							if (doc.documentTypeId.length() == 0) doc.documentTypeId = "financialReport";
						
						this.window.height += 230;
						documentsTable.visible = documentsTable.includeInLayout = true;
						infoText.visible = infoText.includeInLayout = true;
						documentsTable.dataProvider = result.document;
					}
					else 
						btnExport.enabled = true;
				}
			}
			
			private function dateFunction(item:Object,column:DataGridColumn):String
			{
				var date:String = " - ";
				if (item.issueDate.length() > 0)
					date = Tools.dateToString(Tools.isoToDate(item.issueDate.toString()));
				return date;
			}
			
			private function documentNumberFunction(item:Object,column:DataGridColumn):String
			{
				var label:String = "[Nie znaleziono odpowiednika]";
				if (item.fullNumber.length() > 0)
					label = item.fullNumber.toString();
				return label;
			}
		]]>
	</mx:Script>
	<mx:Button id="btnExport" label="Eksportuj" click="btnExportClick(event)" enabled="false"/>
	<generic:AsyncTaskComponent id="asyncTask" taskName="PaymentSynchronizationTask" delay="1000" 
		result="Alert.show('Wyeksportowano'); this.btnExport.enabled = true; this.showProgressBar = false;" 
		fault="onFault(event)" 
		abort="this.btnExport.enabled = true; this.showProgressBar = false;" width="100%"/>
	<mx:HBox id="progressBar" width="100%" height="50" horizontalCenter="0" horizontalAlign="center" verticalAlign="middle" verticalCenter="0" visible="{showProgressBar}" includeInLayout="{progressBar.visible}">
		<mx:ProgressBar label="Proszę czekać." indeterminate="true" verticalCenter="0" horizontalCenter="0" width="100%" height="100%" labelPlacement="center"/>
	</mx:HBox>
	<mx:Text id="infoText" text="Nie można dokonać synchronizacji płatności, ponieważ istnieją dokumenty, wymienione poniżej, które nie zostały poprawnie wyeksportowane." color="red" width="100%" height="50" visible="false" includeInLayout="false"/>
	<mx:DataGrid id="documentsTable" width="100%" height="100%" minHeight="150" visible="false" includeInLayout="false">
		<mx:columns>
		<!--
			<mx:DataGridColumn dataField="documentTypeId" headerText="" itemRenderer="com.makolab.fractus.view.generic.DocumentTypeRenderer" width="70"/>
		-->
			<mx:DataGridColumn dataField="documentTypeId" headerText="{LanguageManager.getLabel('documents.documentType')}" itemRenderer="com.makolab.fractus.view.generic.DocumentTypeRenderer" width="105"/>	
			<mx:DataGridColumn dataField="fullNumber" headerText="Numer" labelFunction="documentNumberFunction"/>
			<mx:DataGridColumn dataField="issueDate" headerText="Data wystawienia" labelFunction="dateFunction"/>
		</mx:columns>
	</mx:DataGrid>
</mx:Form>
