<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" verticalGap="0" 
	xmlns:lineList="com.makolab.components.lineList.*" creationComplete="init()" 
	xmlns:catalogue="com.makolab.components.catalogue.*"
	xmlns:control="com.makolab.fractus.control.*" 
	width="100%"
	height="100%"
	>
	<mx:Script>
		<![CDATA[
			import com.makolab.components.inputComponents.DataObjectManager;
		]]>
	</mx:Script>
	<mx:Script>
		<![CDATA[
			import com.makolab.fractus.view.dictionaries.editors.DocumentType;
			import com.makolab.fractus.model.document.DocumentTypeDescriptor;
			import com.makolab.fractus.model.DictionaryManager;
			import com.makolab.fractus.commands.AbstractCommand;
			import mx.collections.XMLListCollection;
			import mx.collections.ICollectionView;
			import mx.core.UIComponent;
			import assets.IconManager;
			import com.makolab.fractus.commands.items.ItemCreateEquivalentCommand;
			import com.makolab.fractus.model.ModelLocator;
			import com.makolab.components.util.ComponentExportManager;
			import mx.events.CloseEvent;
			import mx.controls.Alert;
			import mx.managers.DragManager;
			import mx.events.CollectionEventKind;
			import mx.events.CollectionEvent;
			import mx.events.FlexEvent;
			import mx.events.DragEvent;
			import com.makolab.components.lineList.LineOperationEvent;
			import com.makolab.components.lineList.LineOperation;
			import com.makolab.components.lineList.LineMenu;
			import mx.controls.LinkButton;
			import mx.controls.dataGridClasses.DataGridColumn;
			import com.makolab.fractus.model.LanguageManager;
			import com.makolab.fractus.model.ModelLocator;
			
			[Bindable]
			public var languageManager:LanguageManager = LanguageManager.getInstance();
			[Bindable]
			private var model:ModelLocator = ModelLocator.getInstance();
			
			[Bindable]
			private var dataProvider:XMLListCollection;
			
		
			public var clipboardExtraData:XMLList=null;
			
			/**
			 * Wrapper for IconManager.getIcon() (for usage inside mx:Component).
			*/
			public function getIcon(name:String):Class
			{
				return IconManager.getIcon(name);
			}
			
			private function init():void
			{
				this.dataProvider = new XMLListCollection();
			}

			private function handleDragEnter(event:DragEvent):void
			{
				if(!event.dragSource.hasFormat("documents"))event.preventDefault();
				else
				{
					DragManager.acceptDragDrop(event.currentTarget as UIComponent);
				}
			}
			
			private function handleDragExit(event:DragEvent):void
			{
				DragManager.showFeedback(DragManager.NONE);
			}
			
			private function handleDragOver(event:DragEvent):void
			{
				DragManager.showFeedback(DragManager.COPY);
			}
			
			private function handleDragDrop(event:DragEvent):void
			{
				event.clone();
				if (event.action == DragManager.COPY)
				{
					var items:Array = event.dragSource.dataForFormat("documents") as Array;
					if (items) for (var i:String in items) this.addDocument(items[i].itemXML, grid.calculateDropIndex(event));
				}
				grid.hideDropFeedback(event);
				event.preventDefault();
			}
			
			//<commercialDocumentHeader id_lp="11" id="B879E24B-A08C-415A-A3B2-295445E43911" documentTypeId="44997297-4BAA-4801-86B5-CC2AE23A576C" status="40" fullNumber="3/O1/2009" nazwa_kontrahenta="BIT SOFTWARE" issueDate="2009-09-07T16:26:54"/>
			public function addDocument(position:XML, index:Object=null):Boolean
			{
				var typeDescriptor:DocumentTypeDescriptor = new DocumentTypeDescriptor(position.@documentTypeId);
				
				if(typeDescriptor.categoryNumber == DocumentTypeDescriptor.CATEGORY_WAREHOUSE && parseInt(position.@status) < 40 ||
					typeDescriptor.categoryNumber == DocumentTypeDescriptor.CATEGORY_SERVICE_DOCUMENT && parseInt(position.@status) != 20 )
          //||
					//typeDescriptor.categoryNumber == DocumentTypeDescriptor.CATEGORY_SALES_ORDER_DOCUMENT && parseInt(position.@status) != 20)
					return false;
				
				for each(var item:XML in this.dataProvider)
				{
					if(item.@id == position.@id)
						return false;
				}
			
				if(index == null)
					this.dataProvider.addItem(position);
				else
					this.dataProvider.addItemAt(position, index as int);
					
				this.invalidateDisplayList();
					
				return true;
			}
			
			public function btnDeleteClickHandler(position:XML):void
			{
				for(var i:int=0; i<this.dataProvider.length; i++)
				{
					if(this.dataProvider.getItemAt(i).@id == position.@id)
					{
						this.dataProvider.removeItemAt(i);
						break;
					}
				}
			}
			
			
			public function lnkBtnDeleteDocumentsClickHandler(event:Event):void
			{
				this.btnPopUp.close();
				//sprawdzamy czy dokumenty sa tego samego typu
				//var title:String = this.dataProvider.*.number.fullNumber;
				var title:String ="";
				trace("this.dataProvider:",this.dataProvider.length);
				Alert.show(LanguageManager.getLabel("alert.cancelDocumentQuestion"), title, (Alert.YES | Alert.NO), null, delDoc);
				//	DocumentClipboardCreateNewDocumentWindow.addEventListener();
			}
			private function delDoc(e:Event):void 
			{
					trace("this.dataProvider:",this.dataProvider.length);
					DocumentClipboardDeleteDocumentWindow.show(ModelLocator.getInstance().applicationObject as DisplayObject, this.dataProvider, this);
					//this.clear();
			}
			public function lnkBtnCreateDocumentClickHandler(event:Event):void
			{
				this.btnPopUp.close();
				//sprawdzamy czy dokumenty sa tego samego typu
				var docId:String = null;
				for each(var position:XML in this.dataProvider)
				{
					if(docId == null)
						docId = position.@documentTypeId;
					else if(docId != position.@documentTypeId)
					{
						Alert.show(LanguageManager.getInstance().labels.documents.equalDocumentType);
						return;
					}	
				}
				
				DocumentClipboardCreateNewDocumentWindow.show(ModelLocator.getInstance().applicationObject as DisplayObject, this.dataProvider, this);
			
			}
			
			public function clear():void
			{
				this.dataProvider.removeAll();
			}
		]]>
	</mx:Script>
	
	<mx:ControlBar width="100%" textAlign="left" horizontalGap="0" paddingLeft="0" paddingRight="0" paddingTop="2" paddingBottom="2">
		<mx:PopUpButton id="btnPopUp" label="{LanguageManager.getInstance().labels.lists.operationsTitle}" 
			openAlways="true">
			<mx:popUp>
				<mx:VBox backgroundColor="#ffffff" backgroundAlpha="0.8">
					<mx:LinkButton id="lnkBtnCreateDocument" enabled="{this.dataProvider.length > 0}" useHandCursor="{lnkBtnCreateDocument.enabled}" label="{LanguageManager.getInstance().labels.cart.issueDocument}" textAlign="left" width="100%" icon="{getIcon('toDocument_small')}" click="lnkBtnCreateDocumentClickHandler(event)" />
					<mx:LinkButton id="lnkBtnClearClipboard" enabled="{this.dataProvider.length > 0}" useHandCursor="{lnkBtnClearClipboard.enabled}" label="{LanguageManager.getInstance().labels.cart.clear}" textAlign="left" width="100%" icon="{getIcon('toDocument_small')}" click="this.btnPopUp.close(); this.clear()" />
					<mx:LinkButton id="lnkBtnDeleteDocuments" enabled="{this.dataProvider.length > 0}" useHandCursor="{lnkBtnClearClipboard.enabled}" label="{LanguageManager.getInstance().labels.cart.del}" textAlign="left" width="100%" icon="{getIcon('toDocument_small')}" click="lnkBtnDeleteDocumentsClickHandler(event);" />
				</mx:VBox>
			</mx:popUp>
		</mx:PopUpButton>
	</mx:ControlBar>
	<mx:DataGrid 
		id="grid"
		width="100%" 
		height="100%" 
		dataProvider="{this.dataProvider}"
		dragEnter="handleDragEnter(event)"
		dragOver="handleDragOver(event)"
		dragDrop="handleDragDrop(event)"
		dragExit="handleDragExit(event)">
		<mx:columns>
			<mx:DataGridColumn editable="false" headerText="{LanguageManager.getInstance().labels.documents.type}" dataField="@documentTypeId" width="70" itemRenderer="com.makolab.fractus.view.generic.DocumentTypeRenderer" />
			<mx:DataGridColumn editable="false" headerText="{LanguageManager.getInstance().labels.documents.documentNumber}" dataField="@fullNumber" />
			<mx:DataGridColumn editable="false" headerText="{LanguageManager.getInstance().labels.contractors.contractor}" dataField="@contractor" />
			<mx:DataGridColumn editable="false" headerText="{LanguageManager.getInstance().labels.documents.issueDate}" dataField="@issueDate" width="120" itemRenderer="com.makolab.components.inputComponents.DateRenderer" />
			<mx:DataGridColumn headerText="" resizable="false" minWidth="50" width="50" editable="false" paddingLeft="1" paddingRight="1">
				<mx:itemRenderer>
					<mx:Component>
						<mx:Button paddingLeft="1" paddingRight="1" height="22" label="{outerDocument.languageManager.labels.common.Delete}" click="{outerDocument.btnDeleteClickHandler(data as XML)}" />
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
</mx:VBox>
