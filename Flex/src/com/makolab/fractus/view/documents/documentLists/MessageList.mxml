<?xml version="1.0" encoding="utf-8"?>
<mx:Form xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300" xmlns:inputComponents="com.makolab.components.inputComponents.*" xmlns:list="com.makolab.components.list.*" >
	<mx:Script>
		<![CDATA[
			import com.makolab.fractus.commands.FractusCommand;
			import com.makolab.fractus.commands.GetMessageForContractorCommand;
			import com.makolab.fractus.commands.IDocumentSearchCommand;
			import com.makolab.fractus.model.LanguageManager;
			import com.makolab.fractus.model.MenuManager;
			import com.makolab.fractus.model.ModelLocator;
			import com.makolab.fractus.view.ComponentWindow;
			import com.makolab.fractus.view.documents.DocumentRenderer;
			
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			private var _objectId:String;
			public var objectType:int;
						
			public var commandClassFactory:Class=GetMessageForContractorCommand;
			[Bindable]
			private var _columns:XMLList;
			[Bindable]
			private var model:ModelLocator = ModelLocator.getInstance();
			public function get objectId():String
			{
				return _objectId;
			}
			override public function set data(value:Object):void
			{
				super.data = value;
				if(String(value)!=objectId)
				{
					objectId = String(value);
					invokeSearchMessageOperation();
				
				}
			}
			override public function get data():Object 
			{ 
				return objectId;
			}
			[Bindable]
			public function set objectId(value:String):void
			{
				_objectId = value;
			}

			public function set typeConfig(value:String):void
			{
				_columns =  configXML[value].columns;
			}

			public static function showWindow(title:String = ""):ComponentWindow
			{
				var component:MessageList = new MessageList();
				var window:ComponentWindow = ComponentWindow.showWindow(component, ComponentWindow.BUTTON_CLOSE, new Rectangle(-1, -1, 800, 600));
				window.title = title;
				window.closeFunction = window.hide;
				return window;
			}
			
			public function documentList(value:XML):void
			{
				if(value && value.message.length())
				{
					grid.data = value.message;
					countDocuments.text = value.children().length();
				}
			} 
			
			protected function clickHandler(event:MouseEvent):void
			{
				invokeSearchMessageOperation();
	        }	
	        
	        public function invokeSearchMessageOperation():void
	        {
	        	if(!objectId)return;
	        	var commandFactory:ClassFactory = new ClassFactory(commandClassFactory);
	        	commandFactory.properties = {objectId: objectId, objectType: objectType };
	        	
	        	var cmd: FractusCommand = commandFactory.newInstance() as FractusCommand;
	        	
	        	if (cmd is IDocumentSearchCommand)
				{
				  IDocumentSearchCommand(cmd).setDateSpan(dateFilter.dateFrom, dateFilter.dateTo);
				  
				 //IDocumentSearchCommand(cmd).setDocumentTypes(String(documentTypeFilter.selectedItem.id));
				}
	        	cmd.execute(documentList);
	        }

	       	private function gridDbClickHandler(event:ListEvent):void
			{
				var id:String;
				if (grid.selectedItem) id = grid.selectedItem.id;
				if (!id) return;
				
				var mess:Message=new Message();
				var window:ComponentWindow=mess.showWindow( LanguageManager.getInstance().labels.dashboard.message,XML(grid.selectedItem));
				PopUpManager.addPopUp(window, this, false);
				PopUpManager.centerPopUp(window);
			}
			
			private function comboLabelFunction(item:Object):String
			{  
				return item.label.(@lang == LanguageManager.getInstance().currentLanguage).*;
			}
			private function allTypeDataProvider():Object
			{
				var all:XML = <entry><id/><label/></entry>;
				all.label.@lang = LanguageManager.getInstance().currentLanguage;
				all.label.(@lang == LanguageManager.getInstance().currentLanguage).* = LanguageManager.getInstance().labels.common.allF;
				return all;
			}
			
			[Bindable]
			public var dateRangeIndex:int = 1;
		]]>
	</mx:Script>
	
	<mx:XMLList id="configXML" xmlns="">
		<config>
			<messages>
				<columns>
					<column field="id" label="{LanguageManager.getInstance().labels.service.servicedObjectIdentifier}"  width="40"/> 
					<column field="threadStatus" label="{LanguageManager.getInstance().labels.documents.status}"  width="40" dependencyField="all"/>
					<column field="message" label="{LanguageManager.getInstance().labels.dictionaries.documentType}"  width="150"/> 
					
					<column field="date_add" label="{LanguageManager.getInstance().labels.documents.messageDate}" dataType="date" width="40"/> 
					<column field="email" label="{LanguageManager.getInstance().labels.common.email}" width="40"/>
					
				</columns>
			</messages>
			<contractor>
				<columns>
					<column field="@documentTypeId" label="{LanguageManager.getInstance().labels.dictionaries.documentType}" dataType="documentType" width="40"/> 
					<column field="@issueDate" label="{LanguageManager.getInstance().labels.documents.issueDate}" dataType="date" width="40"/> 
					<column field="@fullNumber" label="{LanguageManager.getInstance().labels.documents.documentNumber}" width="40"/>
					<column field="@netValue" label="{LanguageManager.getInstance().labels.documents.netValue}"  dataType="currency" width="40" dependencyField="all"/>
					<column field="@grossValue" label="{LanguageManager.getInstance().labels.documents.grossValue}"  dataType="currency" width="40" dependencyField="all"/>
				</columns>
			</contractor>
			<item>
				<columns>
					<column field="@documentTypeId" label="{LanguageManager.getInstance().labels.dictionaries.documentType}" dataType="documentType" width="40"/> 
					<column field="@issueDate" label="{LanguageManager.getInstance().labels.documents.issueDate}" dataType="date" width="40"/> 
					<column field="@fullNumber" label="{LanguageManager.getInstance().labels.documents.documentNumber}"   width="40"/> 
					<column field="@contractor" label="{LanguageManager.getInstance().labels.contractors.contractor}" width="150"/>
					<column field="@lines" label="{LanguageManager.getInstance().labels.documents.linesCount}"  dataType="float" width="40"/>
					<column field="@quantity" label="{LanguageManager.getInstance().labels.common.amount}"  dataType="float" width="40"/>
					<column field="@netValue" label="{LanguageManager.getInstance().labels.documents.netValue}"  dataType="currency" width="40" dependencyField="all"/>
					<column field="@grossValue" label="{LanguageManager.getInstance().labels.documents.grossValue}"  dataType="currency" width="40" dependencyField="all"/>
				</columns>
			</item>
			<default>
				<columns>
					<column field="@documentTypeId" label="{LanguageManager.getInstance().labels.dictionaries.documentType}" dataType="documentType" width="40"/> 
				</columns>
			</default>
		</config>
	</mx:XMLList>
	
	<mx:VBox id="searchBox" width="600">
		<mx:HBox width="100%">
			<mx:Label text="{LanguageManager.getInstance().labels.documents.issueDate}" width="100" textAlign="right"/>
			<inputComponents:DateFilter id="dateFilter" dateFieldsDirection="horizontal" selectedIndex="{dateRangeIndex}" />
	
				<mx:Button  click="clickHandler(event)"  label="{LanguageManager.getInstance().labels.common.search2}" />
		</mx:HBox>
	</mx:VBox>
	
	<list:CommonGrid id="grid" width="100%" height="100%"  config="{_columns}" doubleClickEnabled="true" itemDoubleClick="{gridDbClickHandler(event)}" />
	<mx:HBox id="footerBox">
		<mx:Label text= "{LanguageManager.getInstance().labels.documents.messageCount} :" />
		<mx:Label id="countDocuments" />
	</mx:HBox>
</mx:Form>
