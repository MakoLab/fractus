<?xml version="1.0" encoding="utf-8"?>
<mx:Form xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300" xmlns:inputComponents="com.makolab.components.inputComponents.*" xmlns:list="com.makolab.components.list.*">
  <mx:Script>
    <![CDATA[
			import com.makolab.fractus.view.ComponentWindow;
			import com.makolab.fractus.model.ModelLocator;
			import mx.events.ListEvent;
			import com.makolab.fractus.model.document.DocumentTypeDescriptor;
			import com.makolab.fractus.commands.IDocumentSearchCommand;
			import com.makolab.fractus.commands.FractusCommand;
			public var objectId:String;
			public var objectType:int;
			import com.makolab.fractus.model.LanguageManager;
			import com.makolab.fractus.view.documents.DocumentRenderer;
			import com.makolab.fractus.model.DictionaryManager; 
						
			public var commandClassFactory:Class;
			[Bindable]
			private var _columns:XMLList;
			[Bindable]
			private var model:ModelLocator = ModelLocator.getInstance();
			
			public function set typeConfig(value:String):void
			{
				_columns =  configXML[value].columns;
			}

			public static function showWindow(title:String = ""):ComponentWindow
			{
				var component:SimpleDocumentList = new SimpleDocumentList();
				var window:ComponentWindow = ComponentWindow.showWindow(component, ComponentWindow.BUTTON_CLOSE, new Rectangle(-1, -1, 800, 600));
				window.title = title;
				window.closeFunction = window.hide;
				return window;
			}
			
			public function documentList(value:XML):void
			{
				grid.data = value.document;
				countDocuments.text = value.children().length();
			} 
			
			protected function clickHandler(event:MouseEvent):void
			{
				invokeSearchDocumentOperation();
	        }	
	        
	        public function invokeSearchDocumentOperation():void
	        {
				if(!objectId)return;
	        	var commandFactory:ClassFactory = new ClassFactory(commandClassFactory);
	        	commandFactory.properties = {objectId: objectId, objectType: objectType };
	        	
	        	var cmd: FractusCommand = commandFactory.newInstance() as FractusCommand;
	        	 
	        	if (cmd is IDocumentSearchCommand)
				{
				  IDocumentSearchCommand(cmd).setDateSpan(dateFilter.dateFrom, dateFilter.dateTo);
				  //IDocumentSearchCommand(cmd).setDocumentTypes(String(documentTypeFilter.selectedItem.id));
				  //IDocumentSearchCommand(cmd).setProcedureTypes('item.p_getProductionHistoryForItem');
				   
				}
	        	cmd.execute(documentList);
	        }

	       	private function gridDbClickHandler(event:ListEvent):void
			{
				var id:String;
				if (grid.selectedItem) id = grid.selectedItem.@id;
				if (!id) return;
				var typeDescriptor:DocumentTypeDescriptor = new DocumentTypeDescriptor(String(grid.selectedItem.@documentTypeId));
				
				var type:String = DictionaryManager.getInstance().dictionaries.documentTypes.(valueOf().id == String(grid.selectedItem.@documentTypeId)).symbol;
				var category:String = typeDescriptor.documentCategory;
				var section:String;
				if(category == 'CommercialDocument' && type != 'FVZ') section = 'sales';
				else if(category == 'CommercialDocument') section = 'purchase';
				else if(category == 'WarehouseDocument') section = 'warehouse';
				//permission hard coded
				
				if(model.permissionManager.isEnabled(section + '.preview'))
	        		DocumentRenderer.showWindow(typeDescriptor.documentCategory, id,false,typeDescriptor.categoryNumber);	
			}
			
			private function comboLabelFunction(item:Object):String
			{  
				return item.label.(@lang == LanguageManager.getInstance().currentLanguage).*;
			}
			private function allTypeDataProvider():Object
			{
				var all:XML = <entry><id/><label/></entry>;
				all.label.@lang = LanguageManager.getInstance().currentLanguage;
				all.label.(@lang == LanguageManager.getInstance().currentLanguage).* = LanguageManager.getInstance().labels.common.allF;
				return all;
			}
			
			[Bindable]
			public var dateRangeIndex:int = 1;
		]]>
  </mx:Script>

  <mx:XMLList id="configXML" xmlns="">
    <config>
      <contractor>
        <columns>
          <column field="@documentTypeId" label="{LanguageManager.getInstance().labels.dictionaries.documentType}" dataType="documentType" width="40"/>
          <column field="@issueDate" label="{LanguageManager.getInstance().labels.documents.issueDate}" dataType="date" width="40"/>
          <column field="@fullNumber" label="{LanguageManager.getInstance().labels.documents.documentNumber}" width="40"/>
          <column field="@netValue" label="{LanguageManager.getInstance().labels.documents.netValue}"  dataType="currency" width="40" dependencyField="all"/>
          <column field="@grossValue" label="{LanguageManager.getInstance().labels.documents.grossValue}"  dataType="currency" width="40" dependencyField="all"/>
        </columns>
      </contractor>
      <item>
        <columns>
          <column field="@documentTypeId" label="{LanguageManager.getInstance().labels.dictionaries.documentType}" dataType="documentType" width="40"/>
          <column field="@fullNumber" label="{LanguageManager.getInstance().labels.common.number}"   width="60"/>
          <column field="@issueDate" label="{LanguageManager.getInstance().labels.documents.issueDate}" dataType="date" width="40"/>


          <column field="@income" label="Przychód"  dataType="float" width="50"/>
          <column field="@outcome" label="Rozchód"  dataType="float" width="50"/>
          <column field="@quantity" label="Ilość ur."  dataType="float" width="50"/>

          <column field="@contractor" label="Pracownik" width="100"/>
        </columns>
      </item>
      <default>
        <columns>
          <column field="@documentTypeId" label="{LanguageManager.getInstance().labels.dictionaries.documentType}" dataType="documentType" width="40"/>
        </columns>
      </default>
    </config>
  </mx:XMLList>

  <mx:VBox id="searchBox" width="550">
    <mx:HBox width="100%">
      <mx:Label text="{LanguageManager.getInstance().labels.documents.issueDate}" width="100" textAlign="right"/>
      <inputComponents:DateFilter id="dateFilter" dateFieldsDirection="horizontal" selectedIndex="{dateRangeIndex}"/>
    </mx:HBox>

    <mx:HBox width="100%">
      <!--  <mx:Label text="{LanguageManager.getInstance().labels.dictionaries.documentType}" width="100" textAlign="right"/>
      <mx:ComboBox  id="documentTypeFilter" width="100%" labelField="@label" dataProvider="{allTypeDataProvider() + DictionaryManager.getInstance().dictionaries.documentTypes }" labelFunction="comboLabelFunction"/>
       -->
      <mx:Box paddingLeft="20">
        <mx:Button click="clickHandler(event)"  label="{LanguageManager.getInstance().labels.common.search2}" left="0"/>
      </mx:Box>

    </mx:HBox>
  </mx:VBox>

  <list:CommonGrid id="grid" width="100%" height="100%"  config="{_columns}" doubleClickEnabled="true" itemDoubleClick="{gridDbClickHandler(event)}" />
  <mx:HBox id="footerBox">
    <mx:Label text= "{LanguageManager.getInstance().labels.documents.documentsCount} :" />
    <mx:Label id="countDocuments" />
  </mx:HBox>
</mx:Form>
