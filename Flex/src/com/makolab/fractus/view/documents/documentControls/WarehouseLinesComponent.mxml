<?xml version="1.0" encoding="utf-8"?>
<AbstractLinesComponent xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="com.makolab.fractus.view.documents.documentControls.*" xmlns:catalogue="com.makolab.fractus.view.catalogue.*" xmlns:inputComponents="com.makolab.components.inputComponents.*" xmlns:lineList="com.makolab.components.lineList.*">
	<columns>
		<mx:DataGridColumn headerText="{LanguageManager.getLabel('common.lp')}" minWidth="20" width="20" editable="false" itemRenderer="com.makolab.components.inputComponents.OrdinalNumberRenderer"/>
		<mx:DataGridColumn headerText="{LanguageManager.getLabel('common.code')}" dataField="itemCode" width="100" headerWordWrap="true" editable="false"/>
		<mx:DataGridColumn headerText="{LanguageManager.getLabel('common.item')}" dataField="itemName" width="230" headerWordWrap="true" editorUsesEnterKey="true" editorDataField="dataObject">
			<mx:itemEditor>
				<mx:Component>
					<catalogue:ItemSearchEditor
							setFunction="{outerDocument.setLineItem}"
							itemId="{data.itemId}"
							itemReload="outerDocument.documentObject.dispatchEvent(DocumentEvent.createEvent(DocumentEvent.DOCUMENT_LINE_SET_ITEM, 'itemId', data, true))"
						>
						<mx:Script>
							<![CDATA[
								import com.makolab.components.document.DocumentEvent;
							]]>
						</mx:Script>
					</catalogue:ItemSearchEditor>
				</mx:Component>
			</mx:itemEditor>
		</mx:DataGridColumn>
		<mx:DataGridColumn headerText="{LanguageManager.getLabel('common.quantity')}" dataField="quantity" width="50" headerWordWrap="true" editorDataField="dataObject" itemEditor="com.makolab.components.inputComponents.CurrencyEditor" itemRenderer="com.makolab.components.inputComponents.CurrencyRenderer" headerStyleName="headerRight"/>
		<mx:DataGridColumn headerText="{LanguageManager.getLabel('dictionaries.unitIdShort')}" dataField="unitId" width="20" minWidth="20" headerWordWrap="true" editorDataField="dataObject" editable="false" itemRenderer="com.makolab.fractus.view.generic.FractusDictionaryRenderer"/>
		<mx:DataGridColumn headerText="Cena jednostkowa" dataField="price" width="50" headerWordWrap="true" editorDataField="dataObject" itemEditor="com.makolab.components.inputComponents.CurrencyEditor" itemRenderer="{valueRenderer}" headerStyleName="headerRight" editable="{enableValueChange}"/>
		<mx:DataGridColumn headerText="Wartość pozycji" dataField="value" width="50" headerWordWrap="true" editorDataField="dataObject" itemEditor="com.makolab.components.inputComponents.CurrencyEditor" itemRenderer="{valueRenderer}" headerStyleName="headerRight" editable="{enableValueChange}"/>
		<mx:DataGridColumn headerText="" minWidth="20" width="20" editable="false">
			<mx:itemRenderer>
				<mx:Component>
					<lineList:LineMenu enabled="{!outerDocument.disableLinesChangeMessage}">
						<mx:Script>
							<![CDATA[
								import com.makolab.fractus.model.LanguageManager;
							]]>
						</mx:Script>
						<lineList:operations>
							<lineList:LineOperation label="{LanguageManager.getLabel('common.Delete')}" operationInvoke="outerDocument.lineListDeleteLine(event)" icon="{outerDocument.getIcon('delete_small')}" textAlign="left"/>
							<lineList:LineOperation label="{LanguageManager.getLabel('common.duplicate')}" operationInvoke="outerDocument.lineListDuplicateLine(event)" icon="{outerDocument.getIcon('duplicate_small')}" textAlign="left"/>
							<lineList:LineOperation label="{LanguageManager.getLabel('common.addNewF')}" operationInvoke="outerDocument.lineListAddNewLine(event)" icon="{outerDocument.getIcon('add_small')}" textAlign="left"/>
							<lineList:LineOperation label="{LanguageManager.getLabel('common.detailsTab')}" operationInvoke="outerDocument.lineListShowDetails(event)" icon="{outerDocument.getIcon('add_small')}" textAlign="left"/>
						</lineList:operations>
					</lineList:LineMenu>
				</mx:Component>
			</mx:itemRenderer>
		</mx:DataGridColumn>
	</columns>
	
	<mx:Script>
		<![CDATA[
			import com.makolab.components.inputComponents.CurrencyRenderer;
			[Bindable]
			public var enableValueChange:Boolean;
			
			private var vr:ClassFactory;
			
			private function get valueRenderer():ClassFactory
			{
				if (!vr)
				{
					vr = new ClassFactory(CurrencyRenderer);
					vr.properties = { zeroText : "-" };
				}
				return vr;
			}
		]]>
	</mx:Script>
</AbstractLinesComponent>
