<?xml version="1.0" encoding="utf-8"?>
<AbstractLinesComponent creationComplete="init()" xmlns:mx="http://www.adobe.com/2006/mxml" xmlns="com.makolab.fractus.view.documents.documentControls.*" xmlns:catalogue="com.makolab.fractus.view.catalogue.*" xmlns:inputComponents="com.makolab.components.inputComponents.*" xmlns:lineList="com.makolab.components.lineList.*" xmlns:generic="com.makolab.fractus.view.generic.*" xmlns:warehouse="com.makolab.fractus.view.warehouse.*">
<mx:Script>
	<![CDATA[
		import com.makolab.fractus.model.LanguageManager;
		import com.makolab.fractus.model.document.BusinessObject;
		import com.makolab.fractus.model.document.BusinessObjectAttribute;
		
		import mx.controls.dataGridClasses.DataGridColumn;
		public var lm:LanguageManager=LanguageManager.getInstance();
		public function setLineAttribute(item:Object, line:BusinessObject):void
		{
			var attr:BusinessObjectAttribute = line.getAttributeByName("LineAttribute_ProductionTechnologyName");
			
			if(attr == null)
				attr = line.addAttributeByName("LineAttribute_ProductionTechnologyName");
			
			attr.value = item.@id;
			attr.label = item.@name;
		}
		
		private function technologyLabelFunction(item:Object,column:DataGridColumn):String
		{
			var ret:String = "";
			if(item && item is BusinessObject && item.attributes){
				var fieldId:String = dictionaryManager.dictionaries.documentFields.(name.toString() == "LineAttribute_ProductionTechnologyName")[0].id.toString();
				for(var i:int = 0; i < item.attributes.length; i++){
					if(item.attributes[i].fieldId == fieldId){
						ret = item.attributes[i].label;
						break;
					}
				}
			}
			return ret;
		}
	]]>
</mx:Script>
	<columns>
		<mx:DataGridColumn headerText="{LanguageManager.getLabel('common.lp')}" minWidth="20" width="30" editable="false" itemRenderer="com.makolab.components.inputComponents.OrdinalNumberRenderer"/>
		<mx:DataGridColumn headerText="{LanguageManager.getLabel('common.code')}" dataField="itemCode" width="100" headerWordWrap="true" editable="false"/>
		<mx:DataGridColumn headerText="{LanguageManager.getLabel('common.item')}" dataField="itemName" headerWordWrap="true" editorUsesEnterKey="true" editorDataField="dataObject">
			<mx:itemEditor>
				<mx:Component>
					<catalogue:ItemSearchEditor
							setFunction="{outerDocument.setLineItem}"
							itemId="{data.itemId}"
							itemReload="outerDocument.documentObject.dispatchEvent(DocumentEvent.createEvent(DocumentEvent.DOCUMENT_LINE_SET_ITEM, 'itemId', data, true))"
						>
						<mx:Script>
							<![CDATA[
								import com.makolab.components.document.DocumentEvent;
							]]>
						</mx:Script>
					</catalogue:ItemSearchEditor>
				</mx:Component>
			</mx:itemEditor>
		</mx:DataGridColumn>
		<mx:DataGridColumn headerText="{LanguageManager.getLabel('common.quantity')}" dataField="quantity" width="50" headerWordWrap="true" editorDataField="dataObject" itemEditor="com.makolab.components.inputComponents.CurrencyEditor" itemRenderer="com.makolab.components.inputComponents.CurrencyRenderer" headerStyleName="headerRight"/>
		<mx:DataGridColumn headerText="{LanguageManager.getLabel('dictionaries.unitIdShort')}" dataField="unitId" editable="false" width="40" minWidth="20" headerWordWrap="true" editorDataField="selectedId" itemEditor="com.makolab.fractus.view.generic.FractusDictionarySelector" itemRenderer="com.makolab.fractus.view.generic.FractusDictionaryRenderer" headerStyleName="headerRight" />
		<mx:DataGridColumn headerText="Technologia" dataField="attributes" width="250" editorDataField="attributes" labelFunction="technologyLabelFunction">
			<mx:itemEditor>
				<mx:Component>
					<LineIdAttributeEditor attributeName="LineAttribute_ProductionTechnologyName"/>
				</mx:Component>
			</mx:itemEditor>
		</mx:DataGridColumn>
		<mx:DataGridColumn headerText="" minWidth="20" width="20" editable="false">
			<mx:itemRenderer>
				<mx:Component>
					<lineList:LineMenu enabled="{!outerDocument.disableLinesChangeMessage}">
						<lineList:operations>
							<lineList:LineOperation label="{outerDocument.lm.getLabel('common.Delete')}" operationInvoke="outerDocument.lineListDeleteLine(event)" icon="{outerDocument.getIcon('delete_small')}" textAlign="left"/>
							<lineList:LineOperation label="{outerDocument.lm.getLabel('common.duplicate')}" operationInvoke="outerDocument.lineListDuplicateLine(event)" icon="{outerDocument.getIcon('duplicate_small')}" textAlign="left"/>
							<lineList:LineOperation label="{outerDocument.lm.getLabel('common.addNewF')}" operationInvoke="outerDocument.lineListAddNewLine(event)" icon="{outerDocument.getIcon('add_small')}" textAlign="left"/>
							<lineList:LineOperation label="{outerDocument.lm.getLabel('common.detailsTab')}" operationInvoke="outerDocument.lineListShowDetails(event)" icon="{outerDocument.getIcon('add_small')}" textAlign="left"/>
						</lineList:operations>
					</lineList:LineMenu>
				</mx:Component>
			</mx:itemRenderer>
		</mx:DataGridColumn>
	</columns>
</AbstractLinesComponent>
