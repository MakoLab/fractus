<?xml version="1.0" encoding="utf-8"?>
<mx:VBox
	horizontalAlign="center"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:inputComponents="com.makolab.components.inputComponents.*"
	xmlns:filters="com.makolab.fractus.view.documents.reports.filters.*"
	xmlns:layoutComponents="com.makolab.components.layoutComponents.*"
	implements="com.makolab.fractus.view.documents.reports.IReportFiltersComponent"
	>
  <mx:Metadata>
    [Event(name="filterInfoChanged", type="flash.events.Event")]
  </mx:Metadata>
  <mx:Script>
    <![CDATA[
			import com.makolab.fractus.model.LanguageManager;
			import com.makolab.fractus.view.documents.reports.filters.CheckBoxFilter;
			import com.makolab.fractus.model.ModelLocator;
			import com.makolab.fractus.view.documents.reports.filters.IReportFilter;
			import com.makolab.fractus.model.DictionaryManager;
			[Bindable]
			public var searchParams:XML;
		
			public function get errors():Array
			{
				var errors:Array = [];
				var children:Array = this.column1.getChildren();
				for(var i:int=0;i<children.length;i++){
					if(children[i] is IReportFilter && (children[i] as IReportFilter).validationError != null){
						errors.push(children[i].validationError);
					}
				}
				return errors;
			}
			
			[Bindable]
			public var filtersInfo:Object;
			
			private function setFiltersInfo(event:Event):void
			{
				if(filtersInfo && event && event.target is IReportFilter)
				{
					var filtersInfoCopy:Object = {};
					for (var name:String in filtersInfo)
					{
						filtersInfoCopy[name] = filtersInfo[name];
					}
					var filter:IReportFilter = (event.target as IReportFilter);
					filtersInfoCopy[event.target.uid] = {label : event.target.label, value : filter.stringValue};
					filtersInfo = filtersInfoCopy;
					dispatchEvent(new Event("filterInfoChanged"));
				}
			}
			
			[Bindable]
			private var showCustomFiltersPanel:Boolean;
			
			private var _customFilters:Array = [];
			public function set customFilters(filters:Array):void
			{
				_customFilters = filters;
				customFiltersForm.removeAllChildren();
				if (_customFilters && _customFilters.length > 0)
				{
					for each (var filter:Object in _customFilters)
					{
						if (!(filter is IReportFilter)) 
						{
							throw new Error("Report filters must implement IReportFilter interface.");
							break;
						}
						(filter as IReportFilter).parameters = searchParams;
						customFiltersForm.addChild(filter as DisplayObject);
					}
					showCustomFiltersPanel = true;
				}else{
					showCustomFiltersPanel = false;
				}
			}
			public function get customFilters():Array
			{
				return _customFilters;
			}
			
			/**
			 * Document category numbers separated with coma.
			 */
			[Bindable]
			public var documentCategories:String;
			
			private function getDocumentTypeList(categories:String):XMLList
			{
				var list:Array = categories.split(",");
				var xmlList:XMLList = new XMLList();
				for(var i:int=0;i<list.length;i++){
					if(!isNaN(Number(list[i])))xmlList = xmlList + DictionaryManager.getInstance().dictionaries.documentTypes.(documentCategory.toString() == list[i]);
				}
				return xmlList;
			}
			
		]]>
  </mx:Script>
  <layoutComponents:CollapsablePanel title="{LanguageManager.getInstance().labels.reports.filters.documentsFilters}" width="600">
    <mx:Form id="column1" width="100%">
      <!--<mx:FormHeading label="Cechy dokumentów"/>-->
      <mx:FormItem label="Zamówienie złożone">
        <filters:DateFilter label="Zamówienie złożone" parameters="{searchParams}" width="100%" change="setFiltersInfo(event)"/>
      </mx:FormItem>
      <!--<filters:SalesmanFilter label="{LanguageManager.getInstance().labels.common.trader}" parameters="{searchParams}" width="100%" change="setFiltersInfo(event)"/>-->
      <filters:DocumentNumberFilter label="{LanguageManager.getInstance().labels.documents.documentNumber}" parameters="{searchParams}" width="100%" change="setFiltersInfo(event)"/>
      <filters:DateRangeFilter label="{LanguageManager.getInstance().labels.dashboard.realizationDate}" dateFromColumnName="cancelledFrom" dateToColumnName="cancelledTo" columnName="cancelled" parameters="{searchParams}" width="100%" change="setFiltersInfo(event)"/>
      <!--<filters:DateRangeFilter label="{LanguageManager.getInstance().labels.reports.filters.prepaymentDateFrom}" dateFromColumnName="prepaymentDateFrom" dateToColumnName="prepaymentDateTo" columnName="prepaid" parameters="{searchParams}" width="100%" change="setFiltersInfo(event)"/>
			<filters:DateRangeFilter label="{LanguageManager.getInstance().labels.reports.filters.settlementDateFrom}" dateFromColumnName="settlementDateFrom" dateToColumnName="settlementDateTo" columnName="settled" parameters="{searchParams}" width="100%" change="setFiltersInfo(event)"/>-->
      <!--<filters:DateRangeFilter label="{LanguageManager.getInstance().labels.reports.filters.relatedOutcomeDateFrom}" dateFromColumnName="relatedOutcomeDateFrom" dateToColumnName="relatedOutcomeDateTo" columnName="relatedOutcome" parameters="{searchParams}" width="100%" change="setFiltersInfo(event)"/>-->
      <filters:DayFilter label="{LanguageManager.getInstance().labels.reports.filters.unsettledForm}" parameters="{searchParams}" columnName="unsettled" width="100%" change="setFiltersInfo(event)"/>

      <filters:DocumentTypeFilter label="{LanguageManager.getInstance().labels.documents.documentType}" parameters="{searchParams}" itemsList="{getDocumentTypeList('3')}" change="setFiltersInfo(event)" width="100%"/>
      <filters:ContractorFilter label="{LanguageManager.getInstance().labels.documentRenderer.contractor2}" parameters="{searchParams}" width="100%" change="setFiltersInfo(event)"/>
      <filters:ContractorsGroupFilter label="{LanguageManager.getInstance().labels.contractors.forms.contractor.contractorsGroups}" parameters="{searchParams}" width="100%" change="setFiltersInfo(event)"/>
      <!--<filters:BranchFilter label="{LanguageManager.getInstance().labels.common.branch}" parameters="{searchParams}" width="100%" change="setFiltersInfo(event)"/>
			<filters:CompanyFilter label="Firma" parameters="{searchParams}" width="100%" change="setFiltersInfo(event)"/>-->
    </mx:Form>
  </layoutComponents:CollapsablePanel>
  <layoutComponents:CollapsablePanel title="{LanguageManager.getInstance().labels.reports.filters.additionalFilters}" width="600" visible="{showCustomFiltersPanel}" includeInLayout="{showCustomFiltersPanel}">
    <mx:Form id="customFiltersForm" width="100%" verticalGap="0"/>
  </layoutComponents:CollapsablePanel>
</mx:VBox>
