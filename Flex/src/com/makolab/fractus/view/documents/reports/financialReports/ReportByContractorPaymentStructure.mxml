<?xml version="1.0" encoding="utf-8"?>
<ReportBase 
	doubleClickEnabled="true"
	xmlns="com.makolab.fractus.view.documents.reports.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:layoutComponents="com.makolab.components.layoutComponents.*" 
	xmlns:inputComponents="com.makolab.components.inputComponents.*" xmlns:filters="com.makolab.fractus.view.documents.reports.filters.*" xmlns:util="com.makolab.components.util.*">

	<mx:Script>
		<![CDATA[
			import com.makolab.components.layoutComponents.SummaryColumn;
			import mx.collections.ArrayCollection;
			import mx.utils.ObjectProxy;
			import mx.containers.FormItem;
			import com.makolab.fractus.view.catalogue.ContractorsCatalogue;
			import com.makolab.components.inputComponents.ContractorRenderer;
			import com.makolab.fractus.view.documents.documentControls.ContractorComponent;
			import mx.utils.ObjectUtil;
			import mx.controls.Alert;
			import com.makolab.fractus.view.catalogue.CatalogueContractorInfo;
			import com.makolab.components.catalogue.ContractorInfoPanel;
			import mx.events.ListEvent;
			import com.makolab.components.util.CurrencyManager;
			import com.makolab.fractus.view.payments.PaymentList;
			import com.makolab.fractus.view.finance.PaymentSettlementEditor;
			import com.makolab.components.util.Tools;
			import mx.formatters.CurrencyFormatter;
			import mx.controls.dataGridClasses.DataGridColumn;
			import com.makolab.fractus.model.LanguageManager;
			
			[Bindable] 
			public var languageManager:LanguageManager = LanguageManager.getInstance();
			
			private var _lastSearchParams:XML;
			
			override protected function moneyLabelFunction(data:Object, listData:Object):String
			{
				var value:Number = parseFloat(data[listData['dataField']]);
				return CurrencyManager.formatCurrency(value, '-', '');
			}
			
			override public function generateReport(newSearchParams:XML,refresh:Boolean = false):void
			{
				this._lastSearchParams = newSearchParams;
				super.generateReport(newSearchParams,refresh);
			}
			
			override protected function onGenerateReportResult():void
			{
				super.onGenerateReportResult();
				period5.headerText = ">" + thresholdFilter.thresholds[0];
				period4.headerText = ">" + thresholdFilter.thresholds[1];
				period3.headerText = ">" + thresholdFilter.thresholds[2];
				period2.headerText = ">" + thresholdFilter.thresholds[3];
				period1.headerText = "<=" + thresholdFilter.thresholds[3];
			}
			
			private function handleItemDoubleClick(event:ListEvent):void
			{
				var dataField:String, contractorId:String, searchParams:XML, value:String;
				if (event.itemRenderer)
				{
					dataField = event.itemRenderer['listData']['dataField'];
					contractorId = event.itemRenderer.data.@id;
					value = event.itemRenderer.data[dataField];
				}
				switch (dataField)
				{
					case '@contractorCode':
						if (contractorId) ContractorsCatalogue.showContractorWindow(contractorId);
						break;
					case '@contractorName':
						if (contractorId) CatalogueContractorInfo.showWindow(contractorId);
						break;
					case '@balance':
						break;
					default:
						if (_lastSearchParams && parseFloat(value))
						{
							searchParams = _lastSearchParams.copy();
							searchParams.contractorId = contractorId;
							searchParams.range = dataField.substr(1);
							searchParams.* = searchParams.* + thresholdFilter.getSearchParams().*
							ContractorPaymentStructureDetails.showWindow(searchParams);
						}
						break;
				}
			}
			
		]]>
	</mx:Script>
	
	
	<customFilters>
		<filters:ThresholdFilter id="thresholdFilter"/>
	</customFilters>
	
	<table>
		<mx:AdvancedDataGrid id="grid" width="100%" height="100%" selectionColor="0x8888FF" itemDoubleClick="handleItemDoubleClick(event)" doubleClickEnabled="true">
			<mx:columns>
				<mx:AdvancedDataGridColumn id="lp" headerText="{LanguageManager.getLabel('common.lp')}" minWidth="50" width="50" editable="false" itemRenderer="com.makolab.components.inputComponents.OrdinalNumberRenderer"/>
				<mx:AdvancedDataGridColumn headerText="Kod (Edycja)" dataField="@contractorCode"  width="100" dataTipField="@contractorPhone" showDataTips="true"/>
				<mx:AdvancedDataGridColumn id="nameColumn" headerText="{LanguageManager.getInstance().labels.documentRenderer.contractor2} (Podgląd)" dataField="@contractorName" dataTipField="@contractorRemark" showDataTips="true" sortCompareFunction="{ReportBase.stringCompareFunction('@contractorName')}"/>
				<mx:AdvancedDataGridColumn id="period5" color="red" headerText="&gt; 90" sortCompareFunction="{Tools.getSortFunction('@period_5')}" dataField="@period_5" labelFunction="moneyLabelFunction" textAlign="right" width="80"/>
				<mx:AdvancedDataGridColumn id="period4" color="red" headerText="&gt; 60" sortCompareFunction="{Tools.getSortFunction('@period_4')}" dataField="@period_4" labelFunction="moneyLabelFunction" textAlign="right" width="80"/>
				<mx:AdvancedDataGridColumn id="period3" color="red" headerText="&gt; 45" sortCompareFunction="{Tools.getSortFunction('@period_3')}" dataField="@period_3" labelFunction="moneyLabelFunction" textAlign="right" width="80"/>
				<mx:AdvancedDataGridColumn id="period2" color="red" headerText="&gt; 30" sortCompareFunction="{Tools.getSortFunction('@period_2')}" dataField="@period_2" labelFunction="moneyLabelFunction" textAlign="right" width="80"/>
				<mx:AdvancedDataGridColumn id="period1" color="red" headerText="&lt;= 30" sortCompareFunction="{Tools.getSortFunction('@period_1')}" dataField="@period_1" labelFunction="moneyLabelFunction" textAlign="right" width="80"/>
				<mx:AdvancedDataGridColumn id="unterm" color="red" headerText="Suma przeterm." sortCompareFunction="{Tools.getSortFunction('@unterm')}" dataField="@unterm" labelFunction="moneyLabelFunction" textAlign="right" width="90"/>
				<mx:AdvancedDataGridColumn id="term" color="blue" headerText="Terminowe" sortCompareFunction="{Tools.getSortFunction('@interm')}" dataField="@interm" labelFunction="moneyLabelFunction" textAlign="right" width="90"/>
				<mx:AdvancedDataGridColumn id="total" color="blue" headerText="Razem" sortCompareFunction="{Tools.getSortFunction('@total')}" dataField="@total" labelFunction="moneyLabelFunction" textAlign="right" width="90"/>
				<mx:AdvancedDataGridColumn id="totalterm" color="blue" headerText="Term/Razem" sortCompareFunction="{Tools.getSortFunction('@untermPercent')}" dataField="@untermPercent" labelFunction="percentLabelFunction" textAlign="right" width="90" />
				<mx:AdvancedDataGridColumn id="opposite" headerText="Pozostałe" sortCompareFunction="{Tools.getSortFunction('@paymentLeft')}" dataField="@paymentLeft" labelFunction="moneyLabelFunction" textAlign="right" width="90"/>
				<mx:AdvancedDataGridColumn id="balance" headerText="Saldo" sortCompareFunction="{Tools.getSortFunction('@balance')}" dataField="@balance" labelFunction="moneyLabelFunction" textAlign="right" width="90"/>
			</mx:columns>
		</mx:AdvancedDataGrid>
	</table>
	<summary>
		<layoutComponents:AdvancedDataGridSummary2 source="{grid}">
			<layoutComponents:summaryColumns>
				<layoutComponents:SummaryColumn operations="{[SummaryColumn.ROW_COUNT]}" sourceColumn="{nameColumn}"/>
				<layoutComponents:SummaryColumn operations="{[SummaryColumn.SUM]}" sourceColumn="{period5}"/>
				<layoutComponents:SummaryColumn operations="{[SummaryColumn.SUM]}" sourceColumn="{period4}"/>
				<layoutComponents:SummaryColumn operations="{[SummaryColumn.SUM]}" sourceColumn="{period3}"/>
				<layoutComponents:SummaryColumn operations="{[SummaryColumn.SUM]}" sourceColumn="{period2}"/>
				<layoutComponents:SummaryColumn operations="{[SummaryColumn.SUM]}" sourceColumn="{period1}"/>
				<layoutComponents:SummaryColumn operations="{[SummaryColumn.SUM]}" sourceColumn="{unterm}"/>
				<layoutComponents:SummaryColumn operations="{[SummaryColumn.SUM]}" sourceColumn="{term}"/>
				<layoutComponents:SummaryColumn operations="{[SummaryColumn.SUM]}" sourceColumn="{total}"/>
				<layoutComponents:SummaryColumn operations="{[SummaryColumn.WEIGHTED_MEAN]}" sourceColumn="{totalterm}" childDataField="@total"/>
				<layoutComponents:SummaryColumn operations="{[SummaryColumn.SUM]}" sourceColumn="{opposite}"/>
				<layoutComponents:SummaryColumn operations="{[SummaryColumn.SUM]}" sourceColumn="{balance}"/>
			</layoutComponents:summaryColumns>
		</layoutComponents:AdvancedDataGridSummary2>
	</summary>
</ReportBase>
