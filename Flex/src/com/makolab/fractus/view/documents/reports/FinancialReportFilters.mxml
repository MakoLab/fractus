<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" horizontalAlign="center" xmlns:inputComponents="com.makolab.components.inputComponents.*" xmlns:filters="com.makolab.fractus.view.documents.reports.filters.*" xmlns:layoutComponents="com.makolab.components.layoutComponents.*"
		creationComplete="checkBoxChanged()"
		implements="com.makolab.fractus.view.documents.reports.IReportFiltersComponent"
	>
	<mx:Metadata>
		[Event(name="filterInfoChanged", type="flash.events.Event")]
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import mx.utils.ObjectProxy;
			import mx.collections.ArrayCollection;
			import com.makolab.fractus.model.LanguageManager;
			import com.makolab.fractus.model.ModelLocator;
			import com.makolab.fractus.view.documents.reports.filters.IReportFilter;
			import com.makolab.fractus.model.DictionaryManager;
			[Bindable]
			public var searchParams:XML;
		
			public function get errors():Array
			{
				var errors:Array = [];
				var children:Array = this.column1.getChildren().concat(this.column2.getChildren());
				for(var i:int=0;i<children.length;i++){
					if(children[i] is IReportFilter && (children[i] as IReportFilter).validationError != null){
						errors.push(children[i].validationError);
					}
				}
				return errors;
			}
			
			[Bindable]
			public var filtersInfo:Object;
			
			private function setFiltersInfo(event:Event):void
			{
				if(filtersInfo && event && event.target is IReportFilter)
				{
					var filtersInfoCopy:Object = {};
					for (var name:String in filtersInfo)
					{
						filtersInfoCopy[name] = filtersInfo[name];
					}
					var filter:IReportFilter = (event.target as IReportFilter);
					filtersInfoCopy[event.target.uid] = {label : event.target.label, value : filter.stringValue};
					filtersInfo = filtersInfoCopy;
					dispatchEvent(new Event("filterInfoChanged"));
				}
			}
			
			/**
			 * Document category numbers separated with coma.
			 */
			[Bindable]
			public var documentCategories:String;
			
			private function getDocumentTypeList(categories:String):XMLList
			{
				var list:Array = categories.split(",");
				var xmlList:XMLList = new XMLList();
				for(var i:int=0;i<list.length;i++){
					if(!isNaN(Number(list[i])))xmlList = xmlList + DictionaryManager.getInstance().dictionaries.documentTypes.(documentCategory.toString() == list[i]);
				}
				return xmlList;
			}
			
			private function checkBoxChanged():void
			{
				// zaleznosci miedzy polami
				if (cbExternalPayment.selected) cbCommercialDocumentPayment.selected = false;
				cbCommercialDocumentPayment.enabled = !cbExternalPayment.selected;
				// ustawianie filtrow w XML
				this.searchParams.filters.column.(@field == 'payments').* = cbPayment.selected ? 1 : 0;
				this.searchParams.filters.column.(@field == 'debt').* = cbDebt.selected ? 1 : 0;
				/*
				this.searchParams.filters.column.(@field == 'showExternalPayments').* = cbExternalPayment.selected ? 1 : 0;
				this.searchParams.filters.column.(@field == 'showCommercialDocumentPayment').* = cbCommercialDocumentPayment.selected ? 1 : 0;
				*/
				
			}
			
			[Bindable]
			private var showCustomFiltersPanel:Boolean;
			
			private var _customFilters:Array = [];
			
			public function set customFilters(filters:Array):void
			{
				_customFilters = filters;
				customFiltersForm.removeAllChildren();
				if (_customFilters && _customFilters.length > 0)
				{
					for each (var filter:Object in _customFilters)
					{
						if (!(filter is IReportFilter)) 
						{
							throw new Error("Report filters must implement IReportFilter interface.");
							break;
						}
						(filter as IReportFilter).parameters = searchParams;
						(filter as DisplayObject).addEventListener(Event.CHANGE,setFiltersInfo);
						customFiltersForm.addChild(filter as DisplayObject);
					}
					showCustomFiltersPanel = true;
				}else{
					showCustomFiltersPanel = false;
				}
			}
			public function get customFilters():Array
			{
				return _customFilters;
			}
		]]>
	</mx:Script>
	<layoutComponents:CollapsablePanel title="{LanguageManager.getInstance().labels.reports.filters.documentsFilters}" width="600">
		<mx:Form id="column1" width="100%">
			<!--<mx:FormHeading label="Cechy dokumentów"/>-->
			<mx:FormItem label="{LanguageManager.getInstance().labels.dictionaries.paymentType}" width="100%">
				<mx:HBox width="100%">
					<mx:RadioButton id="cbDebt" label="{LanguageManager.getInstance().labels.common.debt}" click="checkBoxChanged()" selected="true" groupName="paymentDebt"/>
					<mx:RadioButton id="cbPayment" label="{LanguageManager.getInstance().labels.common.payment}" click="checkBoxChanged()" groupName="paymentDebt"/>
				</mx:HBox>
			</mx:FormItem>
			<mx:FormItem label="{LanguageManager.getInstance().labels.common.dateRange}"><filters:DateFilter id="dateRangeFilter" parameters="{searchParams}" label="{LanguageManager.getInstance().labels.common.dateRange}" change="setFiltersInfo(event)" width="100%" selectedDateRange="0"/></mx:FormItem>
			<!--
			<filters:CompanyFilter label="Firma" parameters="{searchParams}" width="100%"/>
			<filters:BranchFilter label="Oddział" parameters="{searchParams}" width="100%"/>
			-->
			<filters:PaymentMethodFilter id="paymentMethodFilter" label="{LanguageManager.getInstance().labels.documents.paymentMethod}" change="setFiltersInfo(event)" parameters="{searchParams}" width="100%"/>
			<filters:CheckBoxFilter id="cbExternalPayment" change="setFiltersInfo(event)" columnName="showExternalPayments" parameters="{searchParams}" changeFunction="checkBoxChanged" label="{LanguageManager.getInstance().labels.finance.reports.externalPayments}" labelForCheckBox="{LanguageManager.getInstance().labels.finance.reports.includeExternalPayments}" selected="false" width="100%"/>
			<filters:CheckBoxFilter id="cbCommercialDocumentPayment" change="setFiltersInfo(event)" columnName="showCommercialDocumentPayment" parameters="{searchParams}" changeFunction="checkBoxChanged" label="{LanguageManager.getInstance().labels.reports.filters.commercialOnly}" selected="false" width="100%"/>
			<!--
			<mx:FormItem label="{LanguageManager.getInstance().labels.finance.reports.externalPayments}" width="100%">
					<mx:CheckBox id="cbExternalPayment" label="{LanguageManager.getInstance().labels.finance.reports.includeExternalPayments}" click="checkBoxChanged()" selected="false"/>
			</mx:FormItem>
			<mx:FormItem label="Rodzaj płatności" width="100%">
					<mx:CheckBox id="cbCommercialDocumentPayment" label="Tylko płatności dokumentów handlowych" click="checkBoxChanged()" selected="true"/>
			</mx:FormItem>
			-->
			<filters:BranchFilter id="branchFilter" label="{LanguageManager.getInstance().labels.common.branch}" parameters="{searchParams}" width="100%" change="setFiltersInfo(event)"/>
			<filters:WarehouseFilter id="warehouseFilter" showAllWarehouses="{ModelLocator.getInstance().headquarters}" change="setFiltersInfo(event)" label="{LanguageManager.getInstance().labels.common.warehouse}" parameters="{searchParams}" width="100%"/>	
		</mx:Form>
	</layoutComponents:CollapsablePanel>
	
	<layoutComponents:CollapsablePanel title="{LanguageManager.getInstance().labels.reports.filters.contractorFilters}" width="600">
		<mx:Form id="column2" width="100%">
			<!--<mx:FormHeading label="Cechy kontrahentów"/>-->
			<filters:QueryFilter id="contractorName" label="{LanguageManager.getInstance().labels.reports.filters.contractorName}" change="setFiltersInfo(event)" parameters="{searchParams}" width="100%"/>
			<filters:ContractorFilter id="contractorId" label="{LanguageManager.getInstance().labels.documentRenderer.contractor2}" change="setFiltersInfo(event)" parameters="{searchParams}" width="100%"/>
			<filters:ContractorsGroupFilter id="contractorGroupTree" change="setFiltersInfo(event)" label="{LanguageManager.getInstance().labels.reports.filters.contractorsGroup}" direction="vertical" parameters="{searchParams}" width="100%"/>
		</mx:Form>
	</layoutComponents:CollapsablePanel>
	
	<layoutComponents:CollapsablePanel title="{LanguageManager.getInstance().labels.reports.filters.operatorFilters}" width="600">
		<mx:Form id="column3" width="100%">
			<filters:OperatorFilter id="applicationUsers" label="{LanguageManager.getInstance().labels.documentRenderer.issuingPerson}" change="setFiltersInfo(event)" parameters="{searchParams}" width="100%"/>
		</mx:Form>
	</layoutComponents:CollapsablePanel>
	
	<layoutComponents:CollapsablePanel title="{LanguageManager.getInstance().labels.reports.filters.additionalFilters}" width="600" visible="{showCustomFiltersPanel}" includeInLayout="{showCustomFiltersPanel}">
		<mx:Form id="customFiltersForm" width="100%" verticalGap="0"/>
	</layoutComponents:CollapsablePanel>
</mx:VBox>
