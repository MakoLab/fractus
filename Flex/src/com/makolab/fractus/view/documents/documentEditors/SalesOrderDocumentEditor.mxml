<?xml version="1.0" encoding="utf-8"?>
<DocumentEditor
		xmlns="com.makolab.fractus.view.documents.documentEditors.*"
		xmlns:lineList="com.makolab.components.lineList.*"
		xmlns:mx="http://www.adobe.com/2006/mxml"
		xmlns:util="com.makolab.components.util.*"
		xmlns:inputComponents="com.makolab.components.inputComponents.*"
		xmlns:model="com.makolab.fractus.model.*" xmlns:catalogue="com.makolab.components.catalogue.*"
		xmlns:documentControls="com.makolab.fractus.view.documents.documentControls.*" xmlns:plugins="com.makolab.fractus.view.documents.plugins.*"
		printProfileName="defaultCommercialDocumentPdf"
		editorWidth="300"
		creationComplete="creationComplete()"
	>
  <mx:Script>
    <![CDATA[
			import com.makolab.fractus.model.ModelLocator;
			import mx.events.FlexEvent;
			import com.makolab.fractus.view.documents.documentControls.DocumentBarcodeVerificationComponent;
			import com.makolab.components.util.CurrencyManager;
			import com.makolab.components.util.Tools;
			import mx.controls.Alert;
			import com.makolab.components.document.DocumentEvent;
			import com.makolab.fractus.model.document.DocumentObject;
			import mx.messaging.management.Attribute;
			import com.makolab.fractus.view.documents.documentControls.DefaultAttributeComponent;
			import com.makolab.fractus.model.LanguageManager;
			
			private function getSummaryText(pattern:String,totalLines:Number,totalQuantity:Number,totalValue:Number,totalCost:Number,totalProfitMargin:Number,valuatedLinesProfitMargin:Number):String
			{
				var summaryText:String = pattern;
				summaryText = summaryText.replace("%lineCount%",totalLines);
				summaryText = summaryText.replace("%quantity%",totalQuantity);
				summaryText = summaryText.replace("%documentValue%",CurrencyManager.formatCurrency(totalValue));
				summaryText = summaryText.replace("%documentCost%",CurrencyManager.formatCurrency(totalCost));
				summaryText = summaryText.replace("%documentProfitMargin%",CurrencyManager.formatCurrency(totalProfitMargin));
				summaryText = summaryText.replace("%valuatedLinesProfitMargin%",CurrencyManager.formatCurrency(valuatedLinesProfitMargin));
				return summaryText;
			}
			
			private function creationComplete():void
			{
				if(documentObject.typeDescriptor.xmlOptions.additionalAttributes.*.length() == 0)
				{
					this.tabNavigator.getTabAt(2).visible = false;
					this.tabNavigator.getTabAt(2).includeInLayout = false;
				}
				
				if(documentObject.typeDescriptor.xmlOptions.issueOptions.*.length() == 0)
				{
					this.tabNavigator.getTabAt(3).visible = false;
					this.tabNavigator.getTabAt(3).includeInLayout = false;
				}
			
				ModelLocator.getInstance().configManager.requestList(["system.barcodeVerification"],configurationLoaded);
			}
			
			private function configurationLoaded():void
			{
				barcodeVerification = ModelLocator.getInstance().configManager.getBoolean("system.barcodeVerification");
			}
			
			[Bindable] private var barcodeVerification:Boolean;
			
			private function verifyByCode():void
			{
				DocumentBarcodeVerificationComponent.showWindow(documentObject).addEventListener(FlexEvent.HIDE,verificationComponentHide);
			}
			
			private function verificationComponentHide(event:FlexEvent):void
			{
				this.window.setFocus();
			}
			
			private var contractorId:String;
			
			[Bindable]
			public override function set documentObject(value:DocumentObject):void
			{
				super.documentObject = value;
				documentObject.addEventListener(DocumentEvent.DOCUMENT_COMMIT, handleDocumentCommit);
				documentObject.addEventListener(DocumentEvent.DOCUMENT_FIELD_CHANGE, handleDocumentFieldChange);
				documentObject.addEventListener(DocumentEvent.DOCUMENT_ATTRIBUTE_CHANGE, handleDocumentAttributeChange);
				//contractorComponent - co to za smieci?
			}
			
			protected function handleDocumentFieldChange(event:DocumentEvent):void
			{
				if ( event.fieldName == "contractor" )
				{
					if (  !contractorId )
					{
						contractorId = contractorComponent.contractorId;
						lines.recalculateLines();
					}
					setLinesEditEnabled();
				}
			}
			
			protected function handleDocumentAttributeChange(event:DocumentEvent):void
			{
				if (event.fieldName == "Attribute_SalesOrderSalesType")
					setLinesEditEnabled();
			}
			
			private var justOpened:Boolean = true;
			
			private function setLinesEditEnabled():void
			{
				var allowLinesEdit:Boolean = true;
				if(!justOpened) {
					if (saleTypeEditor.value)
					{
						saleTypeEditor.errorString = "";
					}else{
						allowLinesEdit = false;
						saleTypeEditor.errorString = LanguageManager.getInstance().labels.error.salesOrder.saleType;
					}
					if (contractorComponent.contractorId)
					{
						contractorComponent.errorString = "";
					}else{
						allowLinesEdit = false;
						contractorComponent.errorString = LanguageManager.getInstance().labels.error.noContractor;
					}
				}
				justOpened = false;
				documentObject.allowLinesEdit = allowLinesEdit;
			}
			
			protected function handleDocumentCommit(event:DocumentEvent):void
			{
				var errors:Array = [];
				/*
				if (documentObject.xml.serviceDocumentServicePlaces.serviceDocumentServicePlace.servicePlaceId.(!Tools.isGuid(valueOf())).length() > 0)
				{
					errors.push('Wybierz stanowisko serwisowe lub usuń pustą pozycję z listy stanowisk.');
				}
				if (documentObject.xml.serviceDocumentEmployees.serviceDocumentEmployee.employeeId.(!Tools.isGuid(valueOf())).length() > 0)
				{
					errors.push('Wybierz serwisanta lub usuń pustą pozycję z listy serwisantów.');
				}
				*/
				if (documentObject.xml.serviceDocumentServicedObjects.serviceDocumentServicedObject.servicedObjectId == '')
				{
					delete documentObject.xml.serviceDocumentServicedObjects.serviceDocumentServicedObject.servicedObjectId;
				}
				// suma udzialu procentowego
				if (documentObject.xml.serviceDocumentEmployees.serviceDocumentEmployee.length() > 0)
				{
					var fractionSum:Number = 0;
					for each (var x:XML in documentObject.xml.serviceDocumentEmployees.serviceDocumentEmployee) fractionSum += parseFloat(x.timeFraction);
					if (fractionSum != 100) errors.push(LanguageManager.getInstance().labels.error.sum100percentNotCorrect);
				}
				
				if (errors.length > 0)
				{
					event.preventDefault();
					Alert.show(errors.join('\n'));
				}
			} 
			
			override protected function handleKeyDown(event:KeyboardEvent):void
			{
				// Przejscie do konkretnej zakadki
				if (event.ctrlKey && !event.altKey && !event.shiftKey && event.keyCode >= 49 && event.keyCode <= 57)
				{
					if (event.keyCode - 49 < tabNavigator.numChildren && tabNavigator.getTabAt(event.keyCode - 49).visible)
					{
						tabNavigator.selectedIndex = event.keyCode - 49;
						tabNavigator.setFocus();
					}
				}
				super.handleKeyDown(event);
			}
		]]>
  </mx:Script>

  <mx:XML id="contractorSearchParams" xmlns="">
    <searchParams>
      <query/>
      <columns>
        <column field="shortName" sortOrder="1" sortType="ASC"/>
        <column field="fullName"/>
        <column field="code"/>
        <column field="nip"/>
        <!--column field="version" sortOrder="3" sortType="ASC"/-->
      </columns>
    </searchParams>
  </mx:XML>

  <!-- plugins -->
  <plugins:DocumentValidationPlugin id="validationPlugin" documentObject="{documentObject}"/>
  <plugins:LineAttributePlugin documentObject="{documentObject}"/>
  <plugins:CommercialDocumentCalculationPlugin id="calcPlugin" documentObject="{documentObject}"/>
  <plugins:ContractorPlugin documentObject="{documentObject}"/>
  <plugins:DocumentNumberPlugin documentObject="{documentObject}"/>
  <plugins:CostCalculationPlugin id="costCalcPlugin" documentObject="{documentObject}"/>

  <mx:TabNavigator id="tabNavigator" width="100%" height="100%" historyManagementEnabled="false" backgroundAlpha="0.9" backgroundColor="white">
    <mx:Canvas label="{LanguageManager.getInstance().labels.common.basicTab}" width="100%" height="100%" verticalScrollPolicy="on" horizontalScrollPolicy="auto">
      <mx:Form
          paddingLeft="15"
          paddingRight="15"
          width="100%"
          paddingTop="0"
          paddingBottom="0"
			>

        <!-- numer -->
        <mx:HBox horizontalGap="14">
          <mx:Label text="{getDocumentType(documentObject.xml).label.@lang.length()?getDocumentType(documentObject.xml).label.(@lang==LanguageManager.getInstance().currentLanguage)[0]:getDocumentType(documentObject.xml).label}" fontSize="18"/>
          <documentControls:DocumentNumberComponent id="documentNumberComponent" documentObject="{documentObject}"/>
        </mx:HBox>

        <!-- nabywca -->
        <mx:FormItem label="{LanguageManager.getInstance().labels.documents.contractorData}" width="100%">
          <mx:HBox width="100%">
            <documentControls:ContractorComponent
                id="contractorComponent"
                currentState="editor"
                width="40%"
                documentObject="{documentObject}"
                contractorId="{documentObject.xml.contractor.contractor.id}"
                enableAddressSelection="{documentObject.enableAddressSelection}"
                contractorSearchParams="{this.contractorSearchParams}"
						/>

            <!-- dane nabywcy -->
            <documentControls:ContractorDataComponent
                width="60%"
                documentObject="{documentObject}"
						/>
          </mx:HBox>
        </mx:FormItem>

        <mx:HBox>
          <!-- netto/brutto -->
          <documentControls:SalesOrderTypeComponent documentObject="{documentObject}"/>
          <!-- towary/usługi -->
          <documentControls:SalesOrderSaleTypeComponent id="saleTypeEditor" documentObject="{documentObject}" />
        </mx:HBox>

        <!-- obiekty serwisowane -->
        <!--<documentControls:ServicedObjectList documentObject="{documentObject}"/>-->
        <!--
			<documentControls:ServicedObjectComponent documentObject="{documentObject}"/>
			-->
        <documentControls:TemplateSelector documentObject="{documentObject}" enabled="{documentObject.allowLinesEdit}"/>

        <!-- lista pozycji dokumentu -->
        <documentControls:SalesOrderLinesComponent
            id="lines"
            width="100%"
            documentObject="{documentObject}"
            rowCount="9"
            enabled="{documentObject.allowLinesEdit}"
			/>

        <!-- PODSUMOWANIE -->
        <mx:Label visible="{!isNaN(calcPlugin.totalLines)}"
          text="{getSummaryText(LanguageManager.getInstance().labels.documents.salesDocumentSummary,calcPlugin.totalLines,calcPlugin.totalQuantity,calcPlugin.totalValue,calcPlugin.totalCost,calcPlugin.totalProfitMargin,calcPlugin.valuatedLinesProfitMargin)}"/>

        <!-- weryfikacja faktury czytnikiem kodów-->
        <mx:FormItem label="{LanguageManager.getInstance().labels.documents.verifyPurchaseDocument}" visible="{barcodeVerification}" includeInLayout="{barcodeVerification}">
          <mx:Button label="{LanguageManager.getInstance().labels.documents.verify}" toolTip="{LanguageManager.getInstance().labels.documents.verifyDocumentTooltip}" click="{verifyByCode();}" />
        </mx:FormItem>

        <!-- mechanicy i stanowiska -->
        <!--
			<documentControls:ServicePlaceEmployeeComponent documentObject="{documentObject}"/>
			-->
        <!-- platnosci -->
        <!--
			<mx:FormItem>
				<mx:HBox width="100%" horizontalGap="20">
					<documentControls:SimplePaymentControl id="spc" documentObject="{documentObject}" width="70%" editMode="1"/>
					<documentControls:ChangeCalc documentObject="{documentObject}" width="30%"/>
				</mx:HBox>
			</mx:FormItem>
			-->

      </mx:Form>
    </mx:Canvas>

    <!-- ZAKLADKA SZCZEGOLOW -->
    <mx:HBox
				label="{LanguageManager.getInstance().labels.documents.details}"
				paddingLeft="15"
				paddingRight="15"
				paddingTop="15"
				width="100%"
				height="100%"
			>

      <!-- lewa kolumna szczegolow -->
      <mx:Form
					width="35%"
					height="100%"
					paddingTop="4"
				>
        <!-- waluta dokumentu -->
        <documentControls:DocumentCurrencySelector documentObject="{documentObject}" width="100%" visible="{documentObject.typeDescriptor.allowOtherCurrencies}" includeInLayout="{documentObject.typeDescriptor.allowOtherCurrencies}"/>
        <!-- miejsce wystawienia -->
        <documentControls:IssuePlaceComponent documentObject="{documentObject}"/>

        <!-- daty -->
        <documentControls:DateControl documentObject="{documentObject}" fieldName="issueDate" currentState="editor"/>

        <!-- sprzedawca -->
        <!--
				<documentControls:IssuerComponent documentObject="{documentObject}" width="100%"/>
				-->

        <!-- cechy dokumentu -->
        <documentControls:DocumentFeatureComponent documentObject="{this.documentObject}" currentState="editor" />

        <!-- osoba odbierajaca -->
        <documentControls:ReceivingPersonComponent documentObject="{documentObject}" currentState="editor" />

        <!-- atrybuty podstawowe -->
        <mx:Repeater id="basicAttributeRepeater" dataProvider="{documentObject.typeDescriptor.xmlOptions.basicAttributes.attribute}">
          <documentControls:DocumentGenericSingleAttributeComponent documentObject="{documentObject}" attributeName="{basicAttributeRepeater.currentItem.@name}" enabled="{basicAttributeRepeater.currentItem.@readOnly != 1}"/>
        </mx:Repeater>
      </mx:Form>

      <!-- prawa (szersza) kolumna -->
      <mx:Form
					width="65%"
					height="100%"
					paddingTop="4"
				>
        <!-- uwagi -->
        <!--
				<mx:FormItem label="{LanguageManager.getInstance().labels.common.remarks}" width="100%">
					<documentControls:RemarksComponent documentObject="{documentObject}" width="100%" height="150"/>
				</mx:FormItem>
				-->
        <documentControls:RemarksComponent documentObject="{documentObject}" width="100%" height="100"/>

        <!-- tabela VAT -->
        <mx:FormItem label="{LanguageManager.getInstance().labels.common.tableVat}" width="100%">
          <documentControls:VatTableComponent id="vatTable" documentObject="{documentObject}" width="100%"/>
        </mx:FormItem>

        <!-- płatności -->
        <!--
				<documentControls:AdvancedPaymentControl documentObject="{documentObject}" width="100%"/>
				-->
      </mx:Form>
    </mx:HBox>

    <documentControls:AdditionalAttributesTab id="additionalAttributeTab" documentObject="{documentObject}"/>

    <mx:VBox id="optionsTab"
				label="Opcje"
				paddingLeft="15"
				paddingRight="15"
				paddingTop="15"
				width="100%"
				height="100%"
			>
      <!-- opcje -->
      <documentControls:DocumentOptionsControl documentObject="{documentObject}" width="100%"/>
    </mx:VBox>
  </mx:TabNavigator>
</DocumentEditor>