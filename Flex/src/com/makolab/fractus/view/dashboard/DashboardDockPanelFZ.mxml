<?xml version="1.0" encoding="utf-8"?>
<DockPanel 	xmlns="com.makolab.components.layoutComponents.*" 
			xmlns:mx="http://www.adobe.com/2006/mxml" 
			width="100%" maxHeight="300" height="300"
			xmlns:list="com.makolab.components.list.*" 
			creationComplete="callCommand();grid.contextMenu.customItems=[];" 
			headerColors="[0xe4ff00, 0x819400]" titleStyleName="bold"
			title="{LanguageManager.getInstance().labels.dashboard.FZTitle}">
			
			<mx:VBox width="100%" height="100%" id="box">
			<list:CommonGrid id="grid" rowCount="{grid.dataProvider.length>10?10:grid.dataProvider.length}" width="100%" height="100%" doubleClick="gridDoubleClickHandler(event)" doubleClickEnabled="true">		
				<list:columns >
					<mx:DataGridColumn dataField="@documentTypeId" headerText="{LanguageManager.getInstance().labels.dashboard.type}" width="80" itemRenderer="com.makolab.fractus.view.generic.DocumentTypeRenderer"/>
					<mx:DataGridColumn dataField="@status" headerText="{LanguageManager.getInstance().labels.dashboard.state}" itemRenderer="com.makolab.fractus.view.generic.DocumentStatusRenderer" width="20"/>
					<mx:DataGridColumn dataField="@fullNumber" headerText="{LanguageManager.getInstance().labels.dashboard.documentNumber}" width="160"/>
					<mx:DataGridColumn dataField="@issueDate" headerText="{LanguageManager.getInstance().labels.dashboard.date}" width="100" itemRenderer="com.makolab.components.inputComponents.ColorDateRenderer" />
					<mx:DataGridColumn dataField="@fullName" headerText="{LanguageManager.getInstance().labels.dashboard.contractor}" />
					<mx:DataGridColumn dataField="@grossValue" headerText="{LanguageManager.getInstance().labels.dashboard.grossValue}" itemRenderer="com.makolab.components.inputComponents.CurrencyRenderer" width="100"/>
				</list:columns>
			</list:CommonGrid>
			<mx:HBox>
				
			
			<mx:LinkButton label="{LanguageManager.getInstance().labels.dashboard.refresh}" click="callCommand();"/>
			<mx:CheckBox id="sendCh" label="{LanguageManager.getInstance().labels.dashboard.onlyCash}" height="20" paddingRight="20" change="callCommand()"/>
</mx:HBox>
			</mx:VBox>
			
			<mx:Script>
				<![CDATA[
					import com.makolab.fractus.model.LanguageManager;
					import com.makolab.fractus.model.document.DocumentTypeDescriptor;
					import com.makolab.components.inputComponents.ObjectTypeFilter;
					import com.makolab.fractus.view.documents.DocumentRenderer;
					import mx.controls.dataGridClasses.DataGridColumn;
					import com.makolab.fractus.model.ModelLocator;
					import com.makolab.fractus.commands.AbstractCommand;
					import com.makolab.components.util.Tools;
					import com.makolab.fractus.view.documents.reports.salesReports.SalesReport;
					import mx.controls.Alert;
					import com.makolab.fractus.commands.ExecuteCustomProcedureCommand;
					import mx.rpc.events.ResultEvent;
					
					private var cmd:ExecuteCustomProcedureCommand;
					private var mod:ModelLocator=ModelLocator.getInstance();
					
					private var searchParams:XML = <searchParams> 
														<dateFrom/>
  														<dateTo/>
  														<dateFrom1/>
  														<dateTo1/>
  														<report>platnosci</report>
  														<filters/>
								   </searchParams>;
					
					
					private function callCommand():void
					{
						var today:Date = new Date();
						searchParams.dateTo = Tools.dateToIso(today);
						searchParams.filters= <filters><paymentMethod>{sendCh.selected?1:0}</paymentMethod><column field="branchId">{mod.branchId}</column></filters>;
						searchParams.report="platnosci";
						searchParams.pageSize=200;
						searchParams.page=1;
						cmd = new ExecuteCustomProcedureCommand('reports.p_getDashboard',searchParams);
//						<searchParams >
//  <pageSize>200</pageSize>
//  <page>1</page>
//  <dateFrom></dateFrom>
//  <dateTo></dateTo>
//  <dateFrom1></dateFrom1>
//  <dateTo1></dateTo1>
//  <report>platnosci</report>
//  <filters>
//   <column field="branchId">963BFF4B-FF4D-4EAA-8634-6566916CB388</column>
//   </filters>
//</searchParams>);


						cmd.addEventListener(ResultEvent.RESULT,generateReportResult);
						cmd.execute();
					}		
					
					private function generateReportResult(event:ResultEvent):void
					{
						grid.dataProvider = XML(event.result).children()[0].children();
					}
					
					protected function getPayement(id_:String):String
					{
						return ModelLocator.getInstance().dictionaryManager.dictionaries.paymentMethod.(id.toString() == id_).label;
					}
					protected function getBranch(id_:String):String
					{
						return ModelLocator.getInstance().dictionaryManager.dictionaries.branches.(id.toString() == id_).label;
					}
					private function hasCell(a:Array,val:String):Boolean
					{
						for(var i:int=0;i<a.length;i++)
						{
							if(a[i]==val) return true;
						}
						return false;
					}
				
//					private function goToRaport():void{
//						SalesReport.showWindow();
//					}
					function gridDoubleClickHandler(event:MouseEvent):void
					{
						var documentId:String=grid.selectedItem.@id;
						//trace(grid.selectedItem.@id);
						DocumentRenderer.showWindow(DocumentTypeDescriptor.COMMERCIAL_DOCUMENT, documentId);
					}
				]]>
			</mx:Script>
</DockPanel>
