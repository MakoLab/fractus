<?xml version="1.0" encoding="utf-8"?>
<DockPanel 	xmlns="com.makolab.components.layoutComponents.*" 
			xmlns:mx="http://www.adobe.com/2006/mxml" 
			width="100%" maxHeight="300" height="300"
			xmlns:list="com.makolab.components.list.*" 
			creationComplete="callCommand();" 
			headerColors="[0xe4ff00, 0x819400]" titleStyleName="bold"
			title="{LanguageManager.getInstance().labels.dashboard.CurrentStocksTitle}">
		<mx:VBox width="100%" height="100%" id="box">
			
			
				<mx:AdvancedDataGrid  itemDoubleClick="showSalesOrder(event)" doubleClickEnabled="true" styleFunction="myStyleFunc" id="grid" width="100%" height="100%" iconFunction="{getIcon}" horizontalScrollPolicy="on" lockedColumnCount="2">
					<mx:groupedColumns>
						<!--<mx:AdvancedDataGridColumn headerText="" width="22" resizable="false"/>-->
						<mx:AdvancedDataGridColumn id="lp" headerText="{LanguageManager.getLabel('common.lp')}" minWidth="40" editable="false" dataField="@lp" width="40" sortCompareFunction="{Tools.getSortFunction('@lp')}"/>
						<mx:AdvancedDataGridColumn headerText="{LanguageManager.getInstance().labels.dashboard.Name}" dataField="@name" width="85"/>
						<mx:AdvancedDataGridColumn headerText="{LanguageManager.getInstance().labels.dashboard.OrderedQty}" dataField="@orderedQty" width="85"/>
						<mx:AdvancedDataGridColumn headerText="{LanguageManager.getInstance().labels.dashboard.CurrentStock}" dataField="@currentStock" width="85"/>
						<mx:AdvancedDataGridColumnGroup headerText="{LanguageManager.getInstance().labels.dashboard.Orders}">
							<mx:AdvancedDataGridColumn dataField="@FractusStatus" headerText="{LanguageManager.getInstance().labels.dashboard.FractusStatus}"  />
							<mx:AdvancedDataGridColumn dataField="@PrestaStatus" headerText="{LanguageManager.getInstance().labels.dashboard.PrestaStatus}" width="160" />
							<mx:AdvancedDataGridColumn dataField="@creationDate" headerText="{LanguageManager.getInstance().labels.dashboard.CreationDate}" width="150" itemRenderer="com.makolab.components.inputComponents.DateRenderer"/>
							<mx:AdvancedDataGridColumn dataField="@PrestaIdentifier" headerText="{LanguageManager.getInstance().labels.dashboard.PrestaIdentifier}" width="160"/>
							<mx:AdvancedDataGridColumn dataField="@FractusNumber" headerText="{LanguageManager.getInstance().labels.dashboard.FractusIdentifier}" width="160"/>
							<mx:AdvancedDataGridColumn dataField="@orderedQty" headerText="{LanguageManager.getInstance().labels.dashboard.quantity}"  width="100"/>
						</mx:AdvancedDataGridColumnGroup>
					</mx:groupedColumns>
				</mx:AdvancedDataGrid>
						
			<mx:LinkButton label="{LanguageManager.getInstance().labels.dashboard.refresh}" click="callCommand();"/>
			</mx:VBox>
			
			<mx:Script>
				<![CDATA[
					import com.makolab.components.inputComponents.CurrencyRenderer;
					import com.makolab.components.inputComponents.DateRenderer;
					import com.makolab.components.inputComponents.ObjectTypeFilter;
					import com.makolab.components.util.CurrencyManager;
					import com.makolab.components.util.Tools;
					import com.makolab.fractus.commands.AbstractCommand;
					import com.makolab.fractus.commands.ExecuteCustomProcedureCommand;
					import com.makolab.fractus.model.LanguageManager;
					import com.makolab.fractus.model.ModelLocator;
					import com.makolab.fractus.model.document.DocumentTypeDescriptor;
					import com.makolab.fractus.view.catalogue.CatalogueItemInfo;
					import com.makolab.fractus.view.documents.DocumentRenderer;
					import com.makolab.fractus.view.documents.reports.ReportBase;
					import com.makolab.fractus.view.documents.reports.salesReports.SalesReport;
					import com.makolab.fractus.view.generic.DocumentTypePrefixRenderer;
					
					import mx.collections.HierarchicalData;
					import mx.controls.Alert;
					import mx.controls.dataGridClasses.DataGridColumn;
					import mx.events.ListEvent;
					import mx.messaging.channels.StreamingAMFChannel;
					import mx.rpc.events.ResultEvent;
					
					private var cmd:ExecuteCustomProcedureCommand;
					private var mod:ModelLocator=ModelLocator.getInstance();
					
					private var searchParams:XML = <root/>;
					
					private var _dataProvider:XMLList;
					[Bindable]
					public function set dataProvider(value:XMLList):void
					{
						_dataProvider = value;
							grid.dataProvider = new HierarchicalData(_dataProvider);
						
					}
					
					public function get dataProvider():XMLList
					{
						return _dataProvider;
					}
					private function callCommand():void
					{
						searchParams.@lang= LanguageManager.getInstance().currentLanguage;
						searchParams.pageSize=200;
						searchParams.page=1;
						cmd = new ExecuteCustomProcedureCommand('custom.p_PrestaGetCurentStocks',searchParams);


						cmd.addEventListener(ResultEvent.RESULT,generateReportResult);
						cmd.execute();
					}		
				
					private function generateReportResult(event:ResultEvent):void
					{
						var xmll:XMLList=XMLList(event.result).children();
						if(xmll&&xmll.length())
							dataProvider=xmll; 
					}
					
					private function getIcon(item:Object):Class
					{
						return null;
					}
					private function typeLabelFunction(value:Object, col:Object):Object
					{
						var symbol:String = "";
						var id:String = "";
						if(value[col.dataField].length() > 0)
						{
							id = value[col.dataField].toString(); 
							var descriptor:DocumentTypeDescriptor = new DocumentTypeDescriptor(id);
							symbol = descriptor.symbol;
						}
						return symbol;
					}
				
				
					public function myStyleFunc(value:Object, col:AdvancedDataGridColumn):Object{
						if (value && value.localName() == 'relatedDocument')
							return {color:0x4977e0};
						return null;
					}
					private function showSalesOrder(event:ListEvent):void
					{
						var item:Object = event.itemRenderer.data;
						
						if (!item) return;
						if(!item.@id.length()) return;
						CatalogueItemInfo.showWindow(item.@id.toString(),null,CatalogueItemInfo.ITEM_DETAILS);
						//DocumentRenderer.showWindow(DocumentTypeDescriptor.COMMERCIAL_DOCUMENT, item.@id.toString());		
					}
				
				]]>
			</mx:Script>
</DockPanel>
